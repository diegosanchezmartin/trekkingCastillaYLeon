[{"/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/main.ts":"1","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/App.vue":"2","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/router/index.ts":"3","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/TabsPage.vue":"4","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/TabUserRuta.vue":"5","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/TabMensaje.vue":"6","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/TabMensajes.vue":"7","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/Tab3Page.vue":"8","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/Tab2Page.vue":"9","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/AnadirRuta.vue":"10","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/Tab1Page.vue":"11","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/HacerAutenticacion.vue":"12","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/components/FormularioRuta.vue":"13","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/components/IconoSVGBlanco.vue":"14","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/components/Modal.vue":"15","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/components/NavBar.vue":"16","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/components/TrekkingMap.vue":"17","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/camera/usePhotoGallery.ts":"18"},{"size":2157,"mtime":1656193753289,"results":"19","hashOfConfig":"20"},{"size":301,"mtime":1656193753287,"results":"21","hashOfConfig":"20"},{"size":1818,"mtime":1659628230737,"results":"22","hashOfConfig":"20"},{"size":1433,"mtime":1659621286889,"results":"23","hashOfConfig":"20"},{"size":14378,"mtime":1659719238854,"results":"24","hashOfConfig":"20"},{"size":9151,"mtime":1659977713911,"results":"25","hashOfConfig":"20"},{"size":3822,"mtime":1659993173882,"results":"26","hashOfConfig":"20"},{"size":15732,"mtime":1660033517311,"results":"27","hashOfConfig":"20"},{"size":10749,"mtime":1660033517284,"results":"28","hashOfConfig":"20"},{"size":1170,"mtime":1660032141869,"results":"29","hashOfConfig":"20"},{"size":18873,"mtime":1659994743850,"results":"30","hashOfConfig":"20"},{"size":9236,"mtime":1659458908060,"results":"31","hashOfConfig":"20"},{"size":13661,"mtime":1660033732774,"results":"32","hashOfConfig":"20"},{"size":2703,"mtime":1656193753288,"results":"33","hashOfConfig":"20"},{"size":1925,"mtime":1656194061426,"results":"34","hashOfConfig":"20"},{"size":442,"mtime":1656193753288,"results":"35","hashOfConfig":"20"},{"size":2079,"mtime":1656193753288,"results":"36","hashOfConfig":"20"},{"size":2697,"mtime":1656193753287,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"j6st1r",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},"/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/main.ts",["103"],[],"import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport firebase from \"firebase/compat/app\";\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\nimport { initializeAuth, browserSessionPersistence } from \"firebase/auth\";\n\n//import { isPlatform } from '@ionic/vue';\nimport { IonicVue } from \"@ionic/vue\";\n\n/* Core CSS required for Ionic components to work properly */\nimport \"@ionic/vue/css/core.css\";\n\n/* Basic CSS for apps built with Ionic */\nimport \"@ionic/vue/css/normalize.css\";\nimport \"@ionic/vue/css/structure.css\";\nimport \"@ionic/vue/css/typography.css\";\n\n/* Optional CSS utils that can be commented out */\nimport \"@ionic/vue/css/padding.css\";\nimport \"@ionic/vue/css/float-elements.css\";\nimport \"@ionic/vue/css/text-alignment.css\";\nimport \"@ionic/vue/css/text-transformation.css\";\nimport \"@ionic/vue/css/flex-utils.css\";\nimport \"@ionic/vue/css/display.css\";\n\n/* Theme variables */\nimport \"./theme/variables.css\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBP3_p-kaEpdtkb3m1hV6D8cdj7yzD02K0\",\n  authDomain: \"trekkingcastillayleon.firebaseapp.com\",\n  projectId: \"trekkingcastillayleon\",\n  storageBucket: \"trekkingcastillayleon.appspot.com\",\n  messagingSenderId: \"768183214249\",\n  appId: \"1:768183214249:web:589eb37bc5f6e5b7f189b8\",\n  measurementId: \"G-XPR6FCHEVY\",\n};\n\n// Initialize Firebase\nconst appFirebase = firebase.initializeApp(firebaseConfig);\n//const analytics = getAnalytics(appFirebase);\n\ninitializeAuth(appFirebase, {\n  persistence: browserSessionPersistence,\n  popupRedirectResolver: undefined,\n});\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\n\nlet app: any;\n\nimport { defineCustomElements } from \"@ionic/pwa-elements/loader\";\n\nauth.onAuthStateChanged(async (user) => {\n  if (!app) {\n    app = createApp(App)\n      .use(IonicVue)\n      .use(router);\n\n    router.isReady().then(() => {\n      app.mount(\"#app\");\n\n      defineCustomElements(window);\n    });\n  }\n});\n","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/App.vue",[],[],"/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/router/index.ts",[],[],"/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/TabsPage.vue",[],[],"/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/TabUserRuta.vue",["104","105","106","107"],[],"<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Tab 3</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content :fullscreen=\"true\">\n      <ion-header collapse=\"condense\">\n        <ion-item>\n          <ion-toolbar>\n            <ion-title size=\"large\">Perfil</ion-title>\n          </ion-toolbar>\n          <ion-button\n            slot=\"end\"\n            @click=\"goSendMessage(emailUsuario)\"\n            color=\"medium\"\n          >\n            <ion-icon :icon=\"paperPlaneOutline\" />\n          </ion-button>\n        </ion-item>\n      </ion-header>\n      <ion-card>\n        <swiper\n          :modules=\"modules\"\n          pager=\"true\"\n          :options=\"slideOpts\"\n          navigation\n          :pagination=\"{ clickable: true }\"\n        >\n          <swiper-slide>\n            <img :src=\"imagenPerfil\" />\n          </swiper-slide>\n          <swiper-slide>\n            <ion-grid>\n              <ion-row class=\"filaRutas\">\n                <ion-card class=\"columnaRutas\">\n                  <ion-card-header>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"primary\"\n                        >Rutas</ion-label\n                      >\n                    </ion-row>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"primary\"\n                        >realizadas:</ion-label\n                      >\n                    </ion-row>\n                  </ion-card-header>\n                  <ion-card-content>\n                    <ion-label class=\"etiquetaRutas\" color=\"primary\">\n                      {{ rutasRealizadas }}\n                    </ion-label>\n                  </ion-card-content>\n                </ion-card>\n                <ion-card class=\"columnaRutas\">\n                  <ion-card-header>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"secondary\"\n                        >Rutas</ion-label\n                      >\n                    </ion-row>\n\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"secondary\"\n                        >añadidas:</ion-label\n                      >\n                    </ion-row>\n                  </ion-card-header>\n                  <ion-card-content>\n                    <ion-label class=\"etiquetaRutas\" color=\"secondary\">\n                      {{ rutasAnadidas }}\n                    </ion-label>\n                  </ion-card-content>\n                </ion-card>\n                <ion-card class=\"columnaRutas\">\n                  <ion-card-header>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"tertiary\"\n                        >Rutas</ion-label\n                      >\n                      <ion-row> </ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"tertiary\"\n                        >modificadas:</ion-label\n                      >\n                    </ion-row>\n                  </ion-card-header>\n                  <ion-card-content>\n                    <ion-label class=\"etiquetaRutas\" color=\"tertiary\">\n                      {{ rutasModificadas }}\n                    </ion-label>\n                  </ion-card-content>\n                </ion-card>\n              </ion-row>\n              <ion-row class=\"filaRutas\">\n                <ion-card class=\"columnaRutas\">\n                  <ion-card-header>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"dark\"\n                        >Puntos</ion-label\n                      >\n                      <ion-row> </ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"dark\"\n                        >conseguidos:</ion-label\n                      >\n                    </ion-row>\n                  </ion-card-header>\n                  <ion-card-content>\n                    <ion-label class=\"etiquetaRutas\" color=\"dark\">\n                      {{ puntosUser }}\n                    </ion-label>\n                  </ion-card-content>\n                </ion-card>\n                <ion-card class=\"columnaRutas\">\n                  <ion-card-header>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"medium\"\n                        >Nivel</ion-label\n                      >\n                    </ion-row>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"medium\"\n                        >usuario:</ion-label\n                      >\n                    </ion-row>\n                  </ion-card-header>\n                  <ion-card-content>\n                    <ion-label class=\"etiquetaRutas\" color=\"medium\">\n                      {{ nivelUser }}\n                    </ion-label>\n                  </ion-card-content>\n                </ion-card>\n                <ion-card class=\"columnaRutas\">\n                  <ion-card-header>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"dark\"\n                        >Provincia</ion-label\n                      >\n                      <ion-row> </ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"dark\"\n                        >usuario:</ion-label\n                      >\n                    </ion-row>\n                  </ion-card-header>\n                  <ion-card-content>\n                    <ion-label class=\"etiquetaRutas\" color=\"dark\">\n                      {{ provinciaUser }}\n                    </ion-label>\n                  </ion-card-content>\n                </ion-card>\n              </ion-row>\n            </ion-grid>\n          </swiper-slide>\n        </swiper>\n        <ion-card-header>\n          <ion-card-subtitle>{{ nivelUser }}</ion-card-subtitle>\n          <div class=\"informacionUsuario\">\n            <ion-card-title>{{ nombreUser }}</ion-card-title>\n          </div>\n        </ion-card-header>\n        <ion-card-content>\n          <ion-grid>\n            <ion-row>\n              <div class=\"informacionUsuario\">\n                <ion-label>\n                  {{ infoUsuario }}\n                </ion-label>\n              </div>\n            </ion-row>\n          </ion-grid>\n        </ion-card-content>\n\n        <ion-card class=\"contenedorRutas\">\n          <ion-card-header>\n            <ion-card-subtitle class=\"tiposRutas\"\n              ><ion-icon class=\"elipseRealizadas\" :icon=\"ellipse\" /> Realizadas\n              <ion-icon class=\"elipseAnadidas\" :icon=\"ellipse\" /> Añadidas\n              <ion-icon class=\"elipseModificadas\" :icon=\"ellipse\" />\n              Modificadas</ion-card-subtitle\n            >\n          </ion-card-header>\n          <ion-card-content>\n            <ion-grid>\n              <ion-row size=\"4\">\n                <ion-col size=\"4\" v-for=\"ruta in rutas\" v-bind:key=\"ruta.id\">\n                  <swiper\n                    class=\"swiperAnadida\"\n                    pager=\"true\"\n                    :options=\"slideOpts\"\n                    v-if=\"ruta.estado == 'anadida'\"\n                  >\n                    <swiper-slide\n                      v-for=\"(imagen, index) in ruta.fotos\"\n                      v-bind:key=\"index\"\n                    >\n                      <ion-img :src=\"imagen\" />\n                    </swiper-slide>\n                  </swiper>\n                  <swiper\n                    class=\"swiperRealizada\"\n                    pager=\"true\"\n                    :options=\"slideOpts\"\n                    v-else-if=\"ruta.estado == 'realizada'\"\n                  >\n                    <swiper-slide\n                      v-for=\"(imagen, index) in ruta.fotos\"\n                      v-bind:key=\"index\"\n                    >\n                      <ion-img :src=\"imagen\" />\n                    </swiper-slide>\n                  </swiper>\n                  <swiper\n                    class=\"swiperModificada\"\n                    pager=\"true\"\n                    :options=\"slideOpts\"\n                    v-else-if=\"ruta.estado == 'modificada'\"\n                  >\n                    <swiper-slide\n                      v-for=\"(imagen, index) in ruta.fotos\"\n                      v-bind:key=\"index\"\n                    >\n                      <ion-img :src=\"imagen\" />\n                    </swiper-slide>\n                  </swiper>\n                </ion-col>\n              </ion-row>\n            </ion-grid>\n          </ion-card-content>\n        </ion-card>\n      </ion-card>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { doc, getDoc } from \"@firebase/firestore\";\nimport {\n  ellipse,\n  checkmark,\n  cog,\n  contrast,\n  pencil,\n  informationOutline,\n  alert,\n  paperPlaneOutline,\n} from \"ionicons/icons\";\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonCard,\n  IonCardHeader,\n  IonLabel,\n  IonCol,\n  IonRow,\n  IonImg,\n  IonIcon,\n  useIonRouter,\n  IonButton,\n  IonItem,\n  IonCardContent,\n  IonGrid,\n  IonCardSubtitle,\n  IonCardTitle,\n} from \"@ionic/vue\";\n\nimport { auth, db } from \"@/main\";\nimport { Swiper, SwiperSlide } from \"swiper/vue\";\nimport { Navigation, Pagination } from \"swiper\";\n\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport \"@ionic/vue/css/ionic-swiper.css\";\n\nexport default defineComponent({\n  name: \"Tab3Page\",\n  components: {\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonPage,\n    IonCard,\n    IonCardHeader,\n    IonLabel,\n    IonCol,\n    IonRow,\n    Swiper,\n    SwiperSlide,\n    IonImg,\n    IonIcon,\n    IonButton,\n    IonItem,\n    IonCardContent,\n    IonGrid,\n    IonCardSubtitle,\n    IonCardTitle,\n  },\n  data() {\n    return {\n      nuevoNombreIntroducido: \"\",\n      nuevaInfoIntroducida: \"\",\n      rutasRealizadas: 0,\n      rutasAnadidas: 0,\n      rutasModificadas: 0,\n    };\n  },\n  setup() {\n    const state = reactive({\n      rutas: [],\n      nombreUser: \"\",\n      imagenPerfil: \"\",\n      puntosUser: 0,\n      nivelUser: \"\",\n      provinciaUser: \"\",\n      infoUsuario: \"\",\n      emailUsuario: \"\",\n    });\n    const currentUser = auth.currentUser;\n    const slideOpts = {\n      initialSlide: 0,\n      speed: 400,\n    };\n    const ionRouter = useIonRouter();\n    const goSendMessage = async (email: string) => {\n      ionRouter.push(\"/tabs/tabMensaje/\" + email);\n    };\n    async function obtenerRutasUsuario() {\n      db.collection(\"users\")\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.forEach((result) => {\n            if (result.data().email == this.emailUsuario) {\n              state.imagenPerfil = result.data().fotoPerfil;\n              state.nombreUser =\n                result.data().nombre + \" \" + result.data().apellidos;\n              state.puntosUser = result.data().puntuacion;\n              state.provinciaUser = result.data().provincia;\n              state.infoUsuario = result.data().infoUsuario;\n              this.rutasRealizadas = result.data().rutasRealizadas;\n              this.rutasModificadas = result.data().rutasModificadas;\n              this.rutasAnadidas = result.data().rutasAnadidas;\n              if (result.data().puntuacion <= 10) {\n                state.nivelUser = \"Novat@\";\n              } else if (\n                result.data().puntuacion > 10 &&\n                result.data().puntuacion <= 20\n              ) {\n                state.nivelUser = \"Caminante\";\n              } else if (\n                result.data().puntuacion > 20 &&\n                result.data().puntuacion <= 35\n              ) {\n                state.nivelUser = \"Intrépid@\";\n              } else if (\n                result.data().puntuacion > 35 &&\n                result.data().puntuacion <= 50\n              ) {\n                state.nivelUser = \"Ruter@\";\n              } else if (\n                result.data().puntuacion > 50 &&\n                result.data().puntuacion <= 70\n              ) {\n                state.nivelUser = \"Expert@\";\n              } else if (result.data().puntuacion > 70) {\n                state.nivelUser = \"Pro\";\n              }\n            }\n          });\n        });\n\n      db.collection(\"users\")\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.forEach(async (result) => {\n            if (result.data().email == this.emailUsuario) {\n              var rutasUsuario = await result.ref\n                .collection(\"rutasUsuario\")\n                .get();\n              rutasUsuario.forEach((collection) => {\n                state.rutas.push({\n                  estado: collection.data().estadoRuta,\n                  fotos: collection.data().imagenesIntroducidas,\n                });\n              });\n            }\n          });\n        });\n    }\n    return {\n      goSendMessage,\n      obtenerRutasUsuario,\n      ...toRefs(state),\n      currentUser,\n      slideOpts,\n      modules: [Navigation, Pagination],\n      ellipse,\n      checkmark,\n      cog,\n      pencil,\n      contrast,\n      informationOutline,\n      alert,\n      paperPlaneOutline,\n    };\n  },\n  watch: {\n    $route(to, from) {\n      this.rutas = [];\n      this.emailUsuario = this.$route.params.email;\n      this.obtenerRutasUsuario();\n    },\n  },\n  mounted() {\n    this.emailUsuario = this.$route.params.email;\n    this.obtenerRutasUsuario();\n  },\n});\n</script>\n\n<style scoped>\n.inputEditarInfoNombre {\n  font-size: 28px;\n  font-weight: 700;\n  line-height: 1.2;\n  border: 2px solid black;\n}\n.inputEditarInfo {\n  border: 2px solid black;\n}\n.informacionUsuario {\n  width: 100%;\n}\n.swiperRealizada {\n  border: 3px solid green;\n}\n\n.swiperModificada {\n  border: 3px solid darkRed;\n}\n\n.swiperAnadida {\n  border: 3px solid orange;\n}\n.elipseRealizadas {\n  color: green;\n}\n.elipseAnadidas {\n  color: orange;\n}\n.elipseModificadas {\n  color: darkred;\n}\n.contenedorRutas {\n  margin: 0% 2% 2% 2%;\n}\n.tiposRutas {\n  font-size: 10px;\n  text-align: center;\n  display: flex;\n  justify-content: space-between;\n}\n.filaPerfilAjustes {\n  padding: 5% 0% 0% 0;\n}\n.botonPerfil {\n  width: 80%;\n}\n.columnaPerfil {\n  display: flex;\n  justify-content: center;\n}\n.infoUser {\n  width: 100%;\n}\n.item-native {\n  padding-inline: 2%;\n}\n\n.item-inner {\n  padding-inline: 2%;\n}\n.cabeceraRutas {\n  padding: 0px;\n  padding-inline: 0px;\n}\n.filaRutas {\n  display: flex;\n  justify-content: space-between;\n}\n.columnaRutas {\n  width: 31%;\n  margin: 4px;\n}\n.etiquetaRutas {\n  font-size: x-small;\n}\n</style>","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/TabMensaje.vue",["108","109","110","111","112","113"],[],"<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-back-button defaultHref=\"/tabs/tabMensajes\"></ion-back-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content :fullscreen=\"true\">\n      <ion-grid class=\"grid\">\n        <ion-col class=\"columna\">\n          <ion-row class=\"fila\">\n            <ion-list class=\"lista\">\n              <ion-list-header class=\"ionListHeader\">{{\n                nombreUsuarioMensaje\n              }}</ion-list-header>\n\n              <ion-item\n                v-for=\"mensaje in mensajesMostrados\"\n                v-bind:key=\"mensaje.id\"\n              >\n                <ion-avatar slot=\"start\">\n                  <img :src=\"mensaje.fotoPerfil\" />\n                </ion-avatar>\n                <ion-label>\n                  <h3>{{ mensaje.mensaje }}</h3>\n                </ion-label>\n              </ion-item>\n            </ion-list>\n          </ion-row>\n          <ion-row class=\"fila\">\n            <ion-item class=\"mensaje\">\n              <ion-label position=\"floating\">Mensaje</ion-label>\n              <ion-input\n                clear-input\n                type=\"text\"\n                v-model=\"mensajeUsuario\"\n              ></ion-input\n              ><ion-icon\n                :icon=\"arrowDownCircleOutline\"\n                slot=\"end\"\n                @click=\"anadirMensaje()\"\n              />\n            </ion-item>\n          </ion-row>\n        </ion-col>\n      </ion-grid>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonBackButton,\n  IonButtons,\n  IonContent,\n  IonAvatar,\n  IonLabel,\n  IonItem,\n  IonListHeader,\n  IonList,\n  IonInput,\n  IonGrid,\n  IonCol,\n  IonRow,\n  IonIcon,\n} from \"@ionic/vue\";\nimport { arrowDownCircleOutline } from \"ionicons/icons\";\nimport { auth, db } from \"@/main\";\nimport { defineComponent, reactive, toRefs } from \"vue\";\n\nfunction uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport default defineComponent({\n  name: \"TabMensajes\",\n  components: {\n    IonHeader,\n    IonToolbar,\n    IonContent,\n    IonPage,\n    IonBackButton,\n    IonButtons,\n    IonAvatar,\n    IonLabel,\n    IonItem,\n    IonListHeader,\n    IonList,\n    IonInput,\n    IonGrid,\n    IonCol,\n    IonRow,\n    IonIcon,\n  },\n  data() {\n    return {\n      mensajesMostrados: [],\n    };\n  },\n  setup() {\n    const state = reactive({\n      imagenUsuarioMensaje: \"\",\n      nombreUsuarioMensaje: \"\",\n      emailUsuario: \"\",\n      mensajeUsuario: \"\",\n      fotoPerfilUsuario: \"\",\n      emailUsuarioEmisor: \"\",\n      uidUsuarioReceptor: \"\",\n    });\n\n    async function anadirMensaje() {\n      const current = new Date();\n      var horas, minutos, segundos, dia, mes, milisegundos;\n      if (current.getHours() < 10) {\n        horas = \"0\" + current.getHours();\n      } else {\n        horas = current.getHours();\n      }\n      if (current.getMinutes() < 10) {\n        minutos = \"0\" + current.getMinutes();\n      } else {\n        minutos = current.getMinutes();\n      }\n      if (current.getSeconds() < 10) {\n        segundos = \"0\" + current.getSeconds();\n      } else {\n        segundos = current.getSeconds();\n      }\n      if (current.getDate() < 10) {\n        dia = \"0\" + current.getDate();\n      } else {\n        dia = current.getDate();\n      }\n      if (current.getMonth() < 10) {\n        mes = \"0\" + current.getMonth();\n      } else {\n        mes = current.getMonth();\n      }\n      if (current.getMilliseconds() < 10) {\n        milisegundos = \"00\" + current.getMilliseconds();\n      } else if (current.getMilliseconds() < 100) {\n        milisegundos = \"0\" + current.getMilliseconds();\n      } else {\n        milisegundos = current.getMilliseconds();\n      }\n\n      //const idMensaje = uuidv4();\n      const mensaje = {\n        creador: auth.currentUser.displayName,\n        mensaje: this.mensajeUsuario,\n        fechaPublicacion: `${current.getDate()}/${\n          current.getMonth() + 1\n        }/${current.getFullYear()}`,\n        fotoPerfil: this.fotoPerfilUsuario,\n      };\n\n      this.mensajesMostrados.push(mensaje);\n\n      console.log(current);\n\n      await db\n        .collection(\"users\")\n        .doc(auth.currentUser?.uid)\n        .collection(\"mensajes\")\n        .doc(this.emailUsuario).set({\n          fechaPublicacion: `${current.getDate()}${\n            current.getMonth() + 1\n          }${current.getFullYear()}${current.getHours()}${current.getMinutes()}${current.getSeconds()}${current.getMilliseconds()}`,\n        });\n\n      await db\n        .collection(\"users\")\n        .doc(auth.currentUser?.uid)\n        .collection(\"mensajes\")\n        .doc(this.emailUsuario)\n        .collection(\"conversacion\")\n        .doc(\n          dia +\n            mes +\n            current.getFullYear() +\n            horas +\n            minutos +\n            segundos +\n            milisegundos\n        )\n        .set({\n          creador: auth.currentUser.displayName,\n          mensaje: this.mensajeUsuario,\n          fechaPublicacion: `${current.getDate()}${\n            current.getMonth() + 1\n          }${current.getFullYear()}${current.getHours()}${current.getMinutes()}${current.getSeconds()}${current.getMilliseconds()}`,\n        });\n\n      await db\n        .collection(\"users\")\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.forEach((doc) => {\n            if (doc.data().email == this.emailUsuario) {\n              this.uidUsuarioReceptor = doc.id;\n              db.collection(\"users\")\n                .doc(this.uidUsuarioReceptor)\n                .collection(\"mensajes\")\n                .doc(this.emailUsuarioEmisor)\n                .collection(\"conversacion\")\n                .doc(\n                  dia +\n                    mes +\n                    current.getFullYear() +\n                    horas +\n                    minutos +\n                    segundos +\n                    milisegundos\n                )\n                .set({\n                  creador: auth.currentUser.displayName,\n                  mensaje: this.mensajeUsuario,\n                  fechaPublicacion: `${current.getDate()}/${\n                    current.getMonth() + 1\n                  }/${current.getFullYear()}-${current.getHours()}:${current.getMinutes()}:${current.getSeconds()}::${current.getMilliseconds()}`,\n                });\n            }\n          });\n        });\n\n      console.log(\"Mensaje enviado: \" + mensaje.mensaje);\n      this.mensajeUsuario = \"\";\n    }\n\n    async function cargarPaginaMensajes() {\n      const usuario = db.collection(\"users\").doc(auth.currentUser?.uid);\n      const doc = await usuario.get();\n      if (!doc.exists) {\n        console.log(\"Error!\");\n      } else {\n        this.fotoPerfilUsuario = doc.data().fotoPerfil;\n        this.emailUsuarioEmisor = doc.data().email;\n      }\n\n      db.collection(\"users\")\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.forEach((result) => {\n            console.log(this.emailUsuario + \" \" + result.data().email);\n            if (result.data().email == this.emailUsuario) {\n              state.nombreUsuarioMensaje =\n                result.data().nombre + \" \" + result.data().apellidos;\n              state.imagenUsuarioMensaje = result.data().fotoPerfil;\n              console.log(\n                state.imagenUsuarioMensaje + \" \" + state.nombreUsuarioMensaje\n              );\n            }\n          });\n        });\n\n      db.collection(\"users\")\n        .doc(auth.currentUser?.uid)\n        .collection(\"mensajes\")\n        .doc(this.emailUsuario)\n        .collection(\"conversacion\")\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.forEach((result) => {\n            var mensaje;\n            if (result.data().creador === auth.currentUser?.displayName) {\n              mensaje = {\n                creador: result.data().creador,\n                mensaje: result.data().mensaje,\n                fechaPublicacion: result.data().fechaPublicacion,\n                fotoPerfil: this.fotoPerfilUsuario,\n              };\n            } else {\n              mensaje = {\n                creador: result.data().creador,\n                mensaje: result.data().mensaje,\n                fechaPublicacion: result.data().fechaPublicacion,\n                fotoPerfil: this.imagenUsuarioMensaje,\n              };\n            }\n            this.mensajesMostrados.push(mensaje);\n          });\n        });\n    }\n    return {\n      ...toRefs(state),\n      anadirMensaje,\n      cargarPaginaMensajes,\n      arrowDownCircleOutline,\n    };\n  },\n  mounted() {\n    this.mensajesMostrado = [];\n    this.emailUsuario = this.$route.params.email;\n    this.cargarPaginaMensajes();\n  },\n});\n</script>\n\n<style scoped>\n.grid {\n  height: 100%;\n}\n.columna {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.fila {\n  width: 100%;\n}\n.lista {\n  width: 100%;\n}\n.mensaje {\n  width: 100%;\n  align-items: center;\n}\n.ionListHeader {\n  margin: 0px 0px 14px 0px;\n}\n</style>","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/TabMensajes.vue",["114"],[],"<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Mensajes</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content :fullscreen=\"true\">\n      <ion-header collapse=\"condense\">\n        <ion-toolbar>\n          <ion-title size=\"large\">Mensajes</ion-title>\n        </ion-toolbar>\n      </ion-header>\n\n      <ion-list>\n        <ion-list-header> Conversaciones recientes </ion-list-header>\n\n        <ion-item\n          v-for=\"conversacion in conversaciones\"\n          v-bind:key=\"conversacion.id\"\n          @click=\"irAlaConversacion(conversacion.emailUsuario)\"\n        >\n          <ion-avatar slot=\"start\">\n            <img :src=\"conversacion.fotoUser\" />\n          </ion-avatar>\n          <ion-label>\n            <h2>{{ conversacion.nombreUser }}</h2>\n            <h3>{{ conversacion.infoUser }}</h3>\n            <p>{{ conversacion.ultimoMensaje }}</p>\n          </ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonLabel,\n  IonList,\n  IonItem,\n  IonAvatar,\n  IonListHeader,\n  useIonRouter,\n} from \"@ionic/vue\";\nimport { auth, db } from \"@/main\";\nimport { defineComponent, reactive } from \"vue\";\nexport default defineComponent({\n  name: \"TabMensajes\",\n  components: {\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonPage,\n    IonLabel,\n    IonList,\n    IonItem,\n    IonAvatar,\n    IonListHeader,\n  },\n  data() {\n    return {\n      conversaciones: [],\n    };\n  },\n  setup() {\n    const state = reactive({\n      imagenUsuarioMensaje: \"\",\n      nombreUsuarioMensaje: \"\",\n      mensajeUsuario: \"\",\n    });\n    const ionRouter = useIonRouter();\n    const irAlaConversacion = async (emailUser: string) => {\n      ionRouter.push(\"/tabs/tabMensaje/\" + emailUser);\n    };\n    async function cargarPaginaMensajes() {\n      db.collection(\"users\")\n        .doc(auth.currentUser?.uid)\n        .collection(\"mensajes\")\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.forEach(async (result) => {\n            var fotoUserConversacion,\n              infoUserConversacion,\n              ultimoMensaje,\n              nombreUserConversacion,\n              conversacion;\n            const emailUserConversacion = result.id;\n            await db\n              .collection(\"users\")\n              .get()\n              .then((query) => {\n                query.forEach((user) => {\n                  if (user.data().email === emailUserConversacion) {\n                    fotoUserConversacion = user.data().fotoPerfil;\n                    infoUserConversacion = user.data().infoUsuario;\n                    nombreUserConversacion =\n                      user.data().nombre + user.data().apellidos;\n                  }\n                });\n              });\n            await db\n              .collection(\"users\")\n              .doc(auth.currentUser?.uid)\n              .collection(\"mensajes\")\n              .doc(emailUserConversacion)\n              .collection(\"conversacion\")\n              .get()\n              .then((querySnapshot2) => {\n                querySnapshot2.forEach((mensaje) => {\n                  ultimoMensaje = mensaje.data().mensaje;\n                });\n                conversacion = {\n                  nombreUser: nombreUserConversacion,\n                  fotoUser: fotoUserConversacion,\n                  infoUser: infoUserConversacion,\n                  ultimoMensaje: ultimoMensaje,\n                  emailUsuario: emailUserConversacion,\n                };\n                this.conversaciones.push(conversacion);\n              });\n          });\n        });\n    }\n    return {\n      cargarPaginaMensajes,\n      irAlaConversacion,\n    };\n  },\n  mounted() {\n    this.cargarPaginaMensajes();\n  },\n});\n</script>","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/Tab3Page.vue",["115","116","117","118"],[],"<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Perfil</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content :fullscreen=\"true\">\n      <ion-header collapse=\"condense\">\n        <ion-toolbar>\n          <ion-title size=\"large\">Perfil</ion-title>\n        </ion-toolbar>\n      </ion-header>\n      <ion-card>\n        <swiper\n          :modules=\"modules\"\n          pager=\"true\"\n          :options=\"slideOpts\"\n          navigation\n          :pagination=\"{ clickable: true }\"\n        >\n          <swiper-slide>\n            <img :src=\"imagenPerfil\" />\n          </swiper-slide>\n          <swiper-slide>\n            <ion-grid>\n              <ion-row class=\"filaRutas\">\n                <ion-card class=\"columnaRutas\">\n                  <ion-card-header>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"primary\"\n                        >Rutas</ion-label\n                      >\n                    </ion-row>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"primary\"\n                        >realizadas:</ion-label\n                      >\n                    </ion-row>\n                  </ion-card-header>\n                  <ion-card-content>\n                    <ion-label class=\"etiquetaRutas\" color=\"primary\">\n                      {{ rutasRealizadas }}\n                    </ion-label>\n                  </ion-card-content>\n                </ion-card>\n                <ion-card class=\"columnaRutas\">\n                  <ion-card-header>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"secondary\"\n                        >Rutas</ion-label\n                      >\n                    </ion-row>\n\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"secondary\"\n                        >añadidas:</ion-label\n                      >\n                    </ion-row>\n                  </ion-card-header>\n                  <ion-card-content>\n                    <ion-label class=\"etiquetaRutas\" color=\"secondary\">\n                      {{ rutasAnadidas }}\n                    </ion-label>\n                  </ion-card-content>\n                </ion-card>\n                <ion-card class=\"columnaRutas\">\n                  <ion-card-header>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"tertiary\"\n                        >Rutas</ion-label\n                      >\n                      <ion-row> </ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"tertiary\"\n                        >modificadas:</ion-label\n                      >\n                    </ion-row>\n                  </ion-card-header>\n                  <ion-card-content>\n                    <ion-label class=\"etiquetaRutas\" color=\"tertiary\">\n                      {{ rutasModificadas }}\n                    </ion-label>\n                  </ion-card-content>\n                </ion-card>\n              </ion-row>\n              <ion-row class=\"filaRutas\">\n                <ion-card class=\"columnaRutas\">\n                  <ion-card-header>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"dark\"\n                        >Puntos</ion-label\n                      >\n                      <ion-row> </ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"dark\"\n                        >conseguidos:</ion-label\n                      >\n                    </ion-row>\n                  </ion-card-header>\n                  <ion-card-content>\n                    <ion-label class=\"etiquetaRutas\" color=\"dark\">\n                      {{ puntosUser }}\n                    </ion-label>\n                  </ion-card-content>\n                </ion-card>\n                <ion-card class=\"columnaRutas\">\n                  <ion-card-header>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"medium\"\n                        >Nivel</ion-label\n                      >\n                    </ion-row>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"medium\"\n                        >usuario:</ion-label\n                      >\n                    </ion-row>\n                  </ion-card-header>\n                  <ion-card-content>\n                    <ion-label class=\"etiquetaRutas\" color=\"medium\">\n                      {{ nivelUser }}\n                    </ion-label>\n                  </ion-card-content>\n                </ion-card>\n                <ion-card class=\"columnaRutas\">\n                  <ion-card-header>\n                    <ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"dark\"\n                        >Provincia</ion-label\n                      >\n                      <ion-row> </ion-row>\n                      <ion-label class=\"etiquetaRutas\" color=\"dark\"\n                        >usuario:</ion-label\n                      >\n                    </ion-row>\n                  </ion-card-header>\n                  <ion-card-content>\n                    <ion-label class=\"etiquetaRutas\" color=\"dark\">\n                      {{ provinciaUser }}\n                    </ion-label>\n                  </ion-card-content>\n                </ion-card>\n              </ion-row>\n            </ion-grid>\n          </swiper-slide>\n        </swiper>\n        <ion-card-header>\n          <ion-card-subtitle>{{ nivelUser }}</ion-card-subtitle>\n          <div class=\"informacionUsuario\" v-if=\"!modificando\">\n            <ion-card-title>{{ nombreUser }}</ion-card-title>\n          </div>\n          <div class=\"informacionUsuario\" v-else>\n            <ion-input\n              type=\"text\"\n              maxlength=\"22\"\n              v-model=\"nuevoNombreIntroducido\"\n              class=\"inputEditarInfoNombre\"\n            ></ion-input>\n          </div>\n        </ion-card-header>\n        <ion-card-content>\n          <ion-grid>\n            <ion-row>\n              <div class=\"informacionUsuario\" v-if=\"!modificando\">\n                <ion-label>\n                  {{ infoUsuario }}\n                </ion-label>\n              </div>\n              <div class=\"informacionUsuario\" v-else>\n                <ion-input\n                  type=\"text\"\n                  maxlength=\"110\"\n                  v-model=\"nuevaInfoIntroducida\"\n                  class=\"inputEditarInfo\"\n                ></ion-input>\n              </div>\n            </ion-row>\n            <ion-row class=\"filaPerfilAjustes\">\n              <ion-col class=\"columnaPerfil\">\n                <ion-button\n                  v-if=\"!modificando\"\n                  @click=\"botonEditar()\"\n                  class=\"botonPerfil\"\n                  color=\"medium\"\n                >\n                  Editar perfil\n                </ion-button>\n                <ion-button\n                  v-else\n                  @click=\"botonEditar()\"\n                  class=\"botonPerfil\"\n                  color=\"success\"\n                >\n                  <ion-icon :icon=\"checkmark\"></ion-icon>\n                </ion-button>\n              </ion-col>\n              <ion-col class=\"columnaPerfil\">\n                <ion-button class=\"botonPerfil\" color=\"medium\">\n                  Ajustes\n                </ion-button>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </ion-card-content>\n\n        <ion-card class=\"contenedorRutas\">\n          <ion-card-header>\n            <ion-card-subtitle class=\"tiposRutas\"\n              ><ion-icon class=\"elipseRealizadas\" :icon=\"ellipse\" /> Realizadas\n              <ion-icon class=\"elipseAnadidas\" :icon=\"ellipse\" /> Añadidas\n              <ion-icon class=\"elipseModificadas\" :icon=\"ellipse\" />\n              Modificadas</ion-card-subtitle\n            >\n          </ion-card-header>\n          <ion-card-content>\n            <ion-grid>\n              <ion-row size=\"4\">\n                <ion-col size=\"4\" v-for=\"ruta in rutas\" v-bind:key=\"ruta.id\">\n                  <swiper\n                    class=\"swiperAnadida\"\n                    pager=\"true\"\n                    :options=\"slideOpts\"\n                    v-if=\"ruta.estado == 'anadida'\"\n                  >\n                    <swiper-slide\n                      v-for=\"(imagen, index) in ruta.fotos\"\n                      v-bind:key=\"index\"\n                    >\n                      <ion-img :src=\"imagen\" />\n                    </swiper-slide>\n                  </swiper>\n                  <swiper\n                    class=\"swiperRealizada\"\n                    pager=\"true\"\n                    :options=\"slideOpts\"\n                    v-else-if=\"ruta.estado == 'realizada'\"\n                  >\n                    <swiper-slide\n                      v-for=\"(imagen, index) in ruta.fotos\"\n                      v-bind:key=\"index\"\n                    >\n                      <ion-img :src=\"imagen\" />\n                    </swiper-slide>\n                  </swiper>\n                  <swiper\n                    class=\"swiperModificada\"\n                    pager=\"true\"\n                    :options=\"slideOpts\"\n                    v-else-if=\"ruta.estado == 'modificada'\"\n                  >\n                    <swiper-slide\n                      v-for=\"(imagen, index) in ruta.fotos\"\n                      v-bind:key=\"index\"\n                    >\n                      <ion-img :src=\"imagen\" />\n                    </swiper-slide>\n                  </swiper>\n                </ion-col>\n              </ion-row>\n            </ion-grid>\n          </ion-card-content>\n        </ion-card>\n      </ion-card>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { doc, getDoc } from \"@firebase/firestore\";\nimport {\n  ellipse,\n  checkmark,\n  cog,\n  contrast,\n  pencil,\n  informationOutline,\n  alert,\n} from \"ionicons/icons\";\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonCard,\n  IonCardHeader,\n  IonLabel,\n  IonButton,\n  IonCol,\n  IonRow,\n  IonImg,\n  IonInput,\n  IonIcon,\n  IonCardContent,\n  IonGrid,\n  IonCardSubtitle,\n  IonCardTitle,\n} from \"@ionic/vue\";\n\nimport { auth, db } from \"@/main\";\nimport { Swiper, SwiperSlide } from \"swiper/vue\";\nimport { Navigation, Pagination } from \"swiper\";\n\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport \"@ionic/vue/css/ionic-swiper.css\";\n\nexport default defineComponent({\n  name: \"Tab3Page\",\n  components: {\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonPage,\n    IonCard,\n    IonCardHeader,\n    IonLabel,\n    IonButton,\n    IonCol,\n    IonRow,\n    Swiper,\n    SwiperSlide,\n    IonImg,\n    IonInput,\n    IonIcon,\n    IonCardContent,\n    IonGrid,\n    IonCardSubtitle,\n    IonCardTitle,\n  },\n  data() {\n    return {\n      nuevoNombreIntroducido: \"\",\n      nuevaInfoIntroducida: \"\",\n      modificando: false,\n      rutasRealizadas: 0,\n      rutasAnadidas: 0,\n      rutasModificadas: 0,\n    };\n  },\n  setup() {\n    const state = reactive({\n      rutas: [],\n      nombreUser: \"\",\n      imagenPerfil: \"\",\n      puntosUser: 0,\n      nivelUser: \"\",\n      provinciaUser: \"\",\n      infoUsuario: \"\",\n    });\n    const currentUser = auth.currentUser;\n    const slideOpts = {\n      initialSlide: 0,\n      speed: 400,\n    };\n    async function botonEditar() {\n      if (this.modificando == false) {\n        this.modificando = true;\n      } else {\n        console.log(this.nuevoNombreIntroducido);\n        console.log(this.nuevaInfoIntroducida);\n        if (this.nuevoNombreIntroducido != \"\") {\n          state.nombreUser = this.nuevoNombreIntroducido;\n          db.collection(\"users\").doc(auth.currentUser.uid).update({\n            nombre: this.nuevoNombreIntroducido,\n          });\n        }\n        if (this.nuevaInfoIntroducida != \"\") {\n          state.infoUsuario = this.nuevaInfoIntroducida;\n          db.collection(\"users\").doc(auth.currentUser.uid).update({\n            infoUsuario: this.nuevaInfoIntroducida,\n          });\n        }\n        this.modificando = false;\n      }\n    }\n    async function obtenerRutasUsuario() {\n      const contadores = doc(db, \"users\", auth.currentUser.uid);\n      const querySnapshot = await getDoc(contadores);\n      const infoUsuario = querySnapshot.data();\n      this.rutasRealizadas = infoUsuario.rutasRealizadas;\n      this.rutasModificadas = infoUsuario.rutasModificadas;\n      this.rutasAnadidas = infoUsuario.rutasAnadidas;\n\n      db.collection(\"users\")\n        .doc(auth.currentUser?.uid)\n        .get()\n        .then((result) => {\n          state.imagenPerfil = result.data().fotoPerfil;\n          state.nombreUser =\n            result.data().nombre + \" \" + result.data().apellidos;\n          state.puntosUser = result.data().puntuacion;\n          state.provinciaUser = result.data().provincia;\n          state.infoUsuario = result.data().infoUsuario;\n          if (result.data().puntuacion <= 10) {\n            state.nivelUser = \"Novat@\";\n          } else if (\n            result.data().puntuacion > 10 &&\n            result.data().puntuacion <= 20\n          ) {\n            state.nivelUser = \"Caminante\";\n          } else if (\n            result.data().puntuacion > 20 &&\n            result.data().puntuacion <= 35\n          ) {\n            state.nivelUser = \"Intrépid@\";\n          } else if (\n            result.data().puntuacion > 35 &&\n            result.data().puntuacion <= 50\n          ) {\n            state.nivelUser = \"Ruter@\";\n          } else if (\n            result.data().puntuacion > 50 &&\n            result.data().puntuacion <= 70\n          ) {\n            state.nivelUser = \"Expert@\";\n          } else if (result.data().puntuacion > 70) {\n            state.nivelUser = \"Pro\";\n          }\n        });\n\n      db.collection(\"users\")\n        .doc(auth.currentUser?.uid)\n        .collection(\"rutasUsuario\")\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.forEach((collection) => {\n            state.rutas.push({\n              estado: collection.data().estadoRuta,\n              fotos: collection.data().imagenesIntroducidas,\n            });\n          });\n        });\n    }\n    return {\n      obtenerRutasUsuario,\n      botonEditar,\n      ...toRefs(state),\n      currentUser,\n      slideOpts,\n      modules: [Navigation, Pagination],\n      ellipse,\n      checkmark,\n      cog,\n      pencil,\n      contrast,\n      informationOutline,\n      alert,\n    };\n  },\n  watch: {\n    $route(to, from) {\n      this.rutas = [];\n      this.obtenerRutasUsuario();\n    },\n  },\n  mounted() {\n    this.obtenerRutasUsuario();\n  },\n});\n</script>\n\n<style scoped>\n.inputEditarInfoNombre {\n  font-size: 28px;\n  font-weight: 700;\n  line-height: 1.2;\n  border: 2px solid black;\n}\n.inputEditarInfo {\n  border: 2px solid black;\n}\n.informacionUsuario {\n  width: 100%;\n}\n.swiperRealizada {\n  border: 3px solid green;\n}\n\n.swiperModificada {\n  border: 3px solid darkRed;\n}\n\n.swiperAnadida {\n  border: 3px solid orange;\n}\n.elipseRealizadas {\n  color: green;\n}\n.elipseAnadidas {\n  color: orange;\n}\n.elipseModificadas {\n  color: darkred;\n}\n.contenedorRutas {\n  margin: 0% 2% 2% 2%;\n}\n.tiposRutas {\n  font-size: 10px;\n  text-align: center;\n  display: flex;\n  justify-content: space-between;\n}\n.filaPerfilAjustes {\n  padding: 5% 0% 0% 0;\n}\n.botonPerfil {\n  width: 80%;\n}\n.columnaPerfil {\n  display: flex;\n  justify-content: center;\n}\n.infoUser {\n  width: 100%;\n}\n.item-native {\n  padding-inline: 2%;\n}\n\n.item-inner {\n  padding-inline: 2%;\n}\n.cabeceraRutas {\n  padding: 0px;\n  padding-inline: 0px;\n}\n.filaRutas {\n  display: flex;\n  justify-content: space-between;\n}\n.columnaRutas {\n  width: 31%;\n  margin: 4px;\n}\n.etiquetaRutas {\n  font-size: x-small;\n}\n</style>\n","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/Tab2Page.vue",["119","120","121","122","123","124"],[],"<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Explora</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content :fullscreen=\"true\">\n      <ion-header collapse=\"condense\">\n        <ion-toolbar>\n          <ion-title size=\"large\">Descubrir</ion-title>\n        </ion-toolbar>\n      </ion-header>\n      <div class=\"app\">\n        <nav-bar titulo=\"Busca tu próxima aventura !\" />\n        <ion-grid>\n          <ion-row>\n            <trekking-map />\n          </ion-row>\n          <nav-bar titulo=\"Ranking de ruteros cañeros!\" />\n          <ion-row>\n            <ion-segment\n              class=\"segmento\"\n              value=\"Provincial\"\n              @ionChange=\"segmentChanged($event)\"\n            >\n              <ion-segment-button value=\"Provincial\">\n                <ion-label>Provincial</ion-label>\n              </ion-segment-button>\n              <ion-segment-button value=\"Regional\">\n                <ion-label>Regional</ion-label>\n              </ion-segment-button>\n            </ion-segment>\n          </ion-row>\n          <ion-row>\n            <ion-list>\n              <ion-item v-if=\"primero.name !== ''\">\n                <ion-avatar slot=\"start\">\n                  <img :src=\"primero.photo\" />\n                </ion-avatar>\n                <ion-label>\n                  <h2>Primero</h2>\n                  <h3>{{ primero.name }}</h3>\n                  <p>Puntuacion: {{ primero.pts }}</p>\n                </ion-label>\n              </ion-item>\n              <ion-item v-if=\"segundo.name !== ''\">\n                <ion-avatar slot=\"start\">\n                  <img :src=\"segundo.photo\" />\n                </ion-avatar>\n                <ion-label>\n                  <h2>Segundo</h2>\n                  <h3>{{ segundo.name }}</h3>\n                  <p>Puntuacion: {{ segundo.pts }}</p>\n                </ion-label>\n              </ion-item>\n              <ion-item v-if=\"tercero.name !== ''\">\n                <ion-avatar slot=\"start\">\n                  <img :src=\"tercero.photo\" />\n                </ion-avatar>\n                <ion-label>\n                  <h2>Tercero</h2>\n                  <h3>{{ tercero.name }}</h3>\n                  <p>Puntuacion: {{ tercero.pts }}</p>\n                </ion-label>\n              </ion-item>\n            </ion-list>\n          </ion-row>\n        </ion-grid>\n      </div>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonGrid,\n  IonRow,\n  IonList,\n  IonItem,\n  IonAvatar,\n  IonSegmentButton,\n  IonSegment,\n  IonLabel,\n} from \"@ionic/vue\";\nimport NavBar from \"../components/NavBar.vue\";\nimport TrekkingMap from \"../components/TrekkingMap.vue\";\nimport { db, auth } from \"@/main\";\nimport { collection, getDocs } from \"@firebase/firestore\";\n\nexport default defineComponent({\n  name: \"Tab2Page\",\n  components: {\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonPage,\n    NavBar,\n    TrekkingMap,\n    IonGrid,\n    IonRow,\n    IonList,\n    IonItem,\n    IonAvatar,\n    IonSegmentButton,\n    IonSegment,\n    IonLabel,\n  },\n  data() {\n    return {\n      provincial: true,\n      primero: { photo: \"\", name: \"\", pts: 0 },\n      segundo: { photo: \"\", name: \"\", pts: 0 },\n      tercero: { photo: \"\", name: \"\", pts: 0 },\n    };\n  },\n  methods: {\n    segmentChanged(ev: CustomEvent) {\n      this.primero.photo = \"\";\n      this.primero.name = \"\";\n      this.primero.ptos = 0;\n      this.segundo.photo = \"\";\n      this.segundo.name = \"\";\n      this.segundo.ptos = 0;\n      this.tercero.photo = \"\";\n      this.tercero.name = \"\";\n      this.tercero.ptos = 0;\n      if (this.provincial == true) {\n        this.obtenerRankingRegional();\n        this.provincial = false;\n      } else {\n        this.obtenerRankingProvincial();\n        this.provincial = true;\n      }\n    },\n  },\n  setup() {\n    async function obtenerRankingProvincial() {\n      const querySnapshot = await getDocs(collection(db, \"users\"));\n      var provinciaUser;\n      db.collection(\"users\")\n        .doc(auth.currentUser?.uid)\n        .get()\n        .then((result) => {\n          provinciaUser = result.data().provincia;\n          querySnapshot.forEach((doc) => {\n            if (doc.data().provincia === provinciaUser) {\n              if (this.primero.name == \"\") {\n                this.primero.name =\n                  doc.data().nombre + \" \" + doc.data().apellidos;\n                this.primero.pts = parseInt(doc.data().puntuacion);\n                this.primero.photo = doc.data().fotoPerfil;\n              } else {\n                if (\n                  parseInt(doc.data().puntuacion) > parseInt(this.primero.pts)\n                ) {\n                  //if (this.segundo == \"\") {\n                  this.tercero.name = this.segundo.name;\n                  this.tercero.pts = this.segundo.pts;\n                  this.tercero.photo = this.segundo.photo;\n                  this.segundo.name = this.primero.name;\n                  this.segundo.pts = this.primero.pts;\n                  this.segundo.photo = this.primero.photo;\n                  this.primero.name =\n                    doc.data().nombre + \" \" + doc.data().apellidos;\n                  this.primero.pts = doc.data().puntuacion;\n                  this.primero.photo = doc.data().fotoPerfil;\n                } else {\n                  if (this.segundo.name == \"\") {\n                    this.segundo.name =\n                      doc.data().nombre + \" \" + doc.data().apellidos;\n                    this.segundo.pts = parseInt(doc.data().puntuacion);\n                    this.segundo.photo = doc.data().fotoPerfil;\n                  } else {\n                    if (\n                      parseInt(doc.data().puntuacion) >\n                      parseInt(this.segundo.pts)\n                    ) {\n                      this.tercero.name = this.segundo.name;\n                      this.tercero.pts = this.segundo.pts;\n                      this.tercero.photo = this.segundo.photo;\n                      this.segundo.name =\n                        doc.data().nombre + \" \" + doc.data().apellidos;\n                      this.segundo.pts = doc.data().puntuacion;\n                      this.segundo.photo = doc.data().fotoPerfil;\n                    } else {\n                      if (this.tercero.name == \"\") {\n                        this.tercero.name =\n                          doc.data().nombre + \" \" + doc.data().apellidos;\n                        this.tercero.pts = parseInt(doc.data().puntuacion);\n                        this.tercero.photo = doc.data().fotoPerfil;\n                      } else {\n                        if (\n                          parseInt(doc.data().puntuacion) >\n                          parseInt(this.tercero.pts)\n                        ) {\n                          this.tercero.name =\n                            doc.data().nombre + \" \" + doc.data().apellidos;\n                          this.tercero.pts = doc.data().puntuacion;\n                          this.tercero.photo = doc.data().fotoPerfil;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          });\n        });\n    }\n    async function obtenerRankingRegional() {\n      const querySnapshot = await getDocs(collection(db, \"users\"));\n      db.collection(\"users\")\n        .doc(auth.currentUser?.uid)\n        .get()\n        .then((result) => {\n          querySnapshot.forEach((doc) => {\n            if (this.primero.name == \"\") {\n              this.primero.name =\n                doc.data().nombre + \" \" + doc.data().apellidos;\n              this.primero.pts = parseInt(doc.data().puntuacion);\n              this.primero.photo = doc.data().fotoPerfil;\n            } else {\n              if (\n                parseInt(doc.data().puntuacion) > parseInt(this.primero.pts)\n              ) {\n                //if (this.segundo == \"\") {\n                this.tercero.name = this.segundo.name;\n                this.tercero.pts = this.segundo.pts;\n                this.tercero.photo = this.segundo.photo;\n                this.segundo.name = this.primero.name;\n                this.segundo.pts = this.primero.pts;\n                this.segundo.photo = this.primero.photo;\n                this.primero.name =\n                  doc.data().nombre + \" \" + doc.data().apellidos;\n                this.primero.pts = doc.data().puntuacion;\n                this.primero.photo = doc.data().fotoPerfil;\n              } else {\n                    if (\n                      parseInt(doc.data().puntuacion) >\n                      parseInt(this.segundo.pts)\n                    ) {\n                      this.tercero.name = this.segundo.name;\n                      this.tercero.pts = this.segundo.pts;\n                      this.tercero.photo = this.segundo.photo;\n                      this.segundo.name =\n                        doc.data().nombre + \" \" + doc.data().apellidos;\n                      this.segundo.pts = doc.data().puntuacion;\n                      this.segundo.photo = doc.data().fotoPerfil;\n                    } else {\n                      if (this.tercero.name == \"\") {\n                        this.tercero.name =\n                          doc.data().nombre + \" \" + doc.data().apellidos;\n                        this.tercero.pts = parseInt(doc.data().puntuacion);\n                        this.tercero.photo = doc.data().fotoPerfil;\n                      } else {\n                        if (\n                          parseInt(doc.data().puntuacion) >\n                          parseInt(this.tercero.pts)\n                        ) {\n                          this.tercero.name =\n                            doc.data().nombre + \" \" + doc.data().apellidos;\n                          this.tercero.pts = doc.data().puntuacion;\n                          this.tercero.photo = doc.data().fotoPerfil;\n                        }\n                      }\n                    }\n                  }\n            }\n          });\n        });\n    }\n    return {\n      obtenerRankingProvincial,\n      obtenerRankingRegional,\n    };\n  },\n  watch: {\n    $route(to, from) {\n      this.primero.photo = \"\";\n      this.primero.name = \"\";\n      this.primero.ptos = 0;\n      this.segundo.photo = \"\";\n      this.segundo.name = \"\";\n      this.segundo.ptos = 0;\n      this.tercero.photo = \"\";\n      this.tercero.name = \"\";\n      this.tercero.ptos = 0;\n      this.provincial = true;\n      this.obtenerRankingProvincial();\n    },\n  },\n  mounted() {\n    this.provincial = true;\n    this.obtenerRankingProvincial();\n  },\n});\n</script>\n\n<style scoped>\n.segmento {\n  margin: 7px;\n}\n.etiqueta {\n  display: flex;\n  justify-content: center;\n}\n</style>\n","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/AnadirRuta.vue",[],[],"/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/Tab1Page.vue",["125","126","127","128","129","130","131","132","133","134","135","136"],[],"<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Explora</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content :fullscreen=\"true\" v-if=\"cargando\">\n      <ion-grid class=\"grid\">\n        <ion-row class=\"row\">\n          <ion-col class=\"col\">\n            <IconoSVGBlanco />\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-content>\n    <ion-content :fullscreen=\"true\" v-else>\n      <ion-header collapse=\"condense\">\n        <ion-item>\n          <ion-button @click=\"goAddRoute()\" color=\"medium\">\n            <ion-icon :icon=\"addCircleOutline\" />\n          </ion-button>\n          <ion-toolbar>\n            <ion-title size=\"large\">Explora</ion-title>\n          </ion-toolbar>\n          <ion-searchbar animated></ion-searchbar>\n        </ion-item>\n      </ion-header>\n      <ion-list class=\"listaRutas\">\n        <ion-item v-for=\"ruta in rutas\" v-bind:key=\"ruta.id\">\n          <ion-card class=\"ruta\">\n            <ion-card-header>\n              <ion-item>\n                <ion-label>\n                  <h4>{{ ruta.nombreRuta }}</h4>\n                  <h3>\n                    <ion-icon :icon=\"locationOutline\" />\n                    {{ ruta.localizacion }} {{ ruta.kilometros }} Kms\n                  </h3>\n                </ion-label>\n              </ion-item>\n            </ion-card-header>\n            <ion-grid>\n              <ion-row>\n                <swiper\n                  :modules=\"modules\"\n                  pager=\"true\"\n                  :options=\"slideOpts\"\n                  navigation\n                  :pagination=\"{ clickable: true }\"\n                >\n                  <swiper-slide\n                    v-for=\"(photo, index) in ruta.imagenesIntroducidas\"\n                    :key=\"index\"\n                  >\n                    <ion-img :src=\"photo\" />\n                  </swiper-slide>\n                </swiper>\n              </ion-row>\n              <ion-row>\n                <ion-col\n                  v-if=\"ruta.usuario !== nombreUsuario\"\n                  class=\"columnaComentarios\"\n                >\n                  <ion-button\n                    class=\"botonComentarios\"\n                    color=\"success\"\n                    @click=\"\n                      rutaRealizada(ruta.imagenesIntroducidas, ruta.tipoRuta)\n                    \"\n                    ><ion-icon :icon=\"checkmarkDoneSharp\"\n                  /></ion-button>\n                </ion-col>\n                <ion-col class=\"columnaComentarios\">\n                  <ion-button\n                    class=\"botonComentarios\"\n                    color=\"medium\"\n                    @click=\"setOpen(true, ruta.nombreRuta)\"\n                    ><ion-icon :icon=\"chatbubbles\"\n                  /></ion-button>\n                </ion-col>\n              </ion-row>\n            </ion-grid>\n            <ion-card-content class=\"cardContent\">\n              <ion-item @click=\"irPerfilUsuario(ruta.emailRuta)\">\n                <ion-avatar slot=\"end\">\n                  <img :src=\"ruta.fotoPerfilUsuarioIntroducida\" />\n                </ion-avatar>\n                <ion-text color=\"dark\">\n                  <h3>{{ ruta.usuario }}</h3>\n                  <h2>{{ ruta.nivelUsuario }}</h2>\n                </ion-text>\n                <ion-text color=\"medium\"> </ion-text>\n              </ion-item>\n            </ion-card-content>\n            <ion-footer>\n              <ion-row>\n                <ion-col center text-center>\n                  <button>\n                    <div>\n                      <ion-icon :icon=\"ruta.iconoIntroducido\"></ion-icon>\n                      {{ ruta.tipoRuta }}\n                    </div>\n                  </button>\n                </ion-col>\n                <ion-col center text-center>\n                  <button>\n                    <div>\n                      {{ ruta.valoracion }} <ion-icon :icon=\"starOutline\" />\n                    </div>\n                  </button>\n                </ion-col>\n                <ion-col center text-center>\n                  <button>\n                    <div>\n                      <ion-icon :icon=\"timeOutline\" />\n                      {{ ruta.fechaPublicacion }}\n                    </div>\n                  </button>\n                </ion-col>\n              </ion-row>\n            </ion-footer>\n          </ion-card>\n        </ion-item>\n        <ion-modal\n          :is-open=\"isOpen\"\n          ref=\"modal\"\n          :initial-breakpoint=\"0.35\"\n          :breakpoints=\"[0.25, 0.5, 0.75, 1]\"\n        >\n          <ion-header>\n            <ion-toolbar>\n              <ion-title>Comentarios</ion-title>\n              <ion-buttons slot=\"end\">\n                <ion-button color=\"light\" @click=\"setOpen(false, null)\"\n                  >Cerrar</ion-button\n                >\n              </ion-buttons>\n            </ion-toolbar>\n          </ion-header>\n          <ion-content>\n            <ion-item class=\"itemComentario\">\n              <ion-label position=\"floating\">Añade tu comentario</ion-label>\n              <ion-input\n                clear-input\n                type=\"text\"\n                v-model=\"comentarioIntroducido\"\n              ></ion-input\n              ><ion-icon\n                :icon=\"arrowDownCircleOutline\"\n                slot=\"end\"\n                @click=\"anadirComentario()\"\n              />\n            </ion-item>\n            <ion-list class=\"list\">\n              <ion-item\n                v-for=\"comentario in comentariosMostrados\"\n                v-bind:key=\"comentario.id\"\n                class=\"item\"\n              >\n                <ion-avatar class=\"avatar\" slot=\"start\">\n                  <ion-img :src=\"comentario.fotoPerfilUsuario\"></ion-img>\n                </ion-avatar>\n                <ion-label>\n                  <h5>{{ comentario.creador }}: {{ comentario.comentario }}</h5>\n                </ion-label>\n              </ion-item>\n            </ion-list>\n          </ion-content>\n        </ion-modal>\n      </ion-list>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { db, auth } from \"@/main\";\nimport { collection, getDocs } from \"@firebase/firestore\";\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonButton,\n  IonButtons,\n  IonItem,\n  IonList,\n  IonCard,\n  IonCardHeader,\n  IonCardContent,\n  IonLabel,\n  IonAvatar,\n  IonFooter,\n  IonCol,\n  IonRow,\n  IonIcon,\n  IonText,\n  IonImg,\n  IonSearchbar,\n  IonGrid,\n  IonModal,\n  IonInput,\n} from \"@ionic/vue\";\nimport {\n  starOutline,\n  timeOutline,\n  resizeOutline,\n  repeatOutline,\n  flagOutline,\n  analyticsOutline,\n  addCircleOutline,\n  searchOutline,\n  locationOutline,\n  checkmarkDoneSharp,\n  chatbubbles,\n  arrowDownCircleOutline,\n} from \"ionicons/icons\";\nimport { useIonRouter } from \"@ionic/vue\";\nimport iconoSVGBlanco from \"../components/IconoSVGBlanco.vue\";\nimport iconoSVGNegro from \"../components/IconoSVGNegro.vue\";\nimport { Swiper, SwiperSlide } from \"swiper/vue\";\nimport { Navigation, Pagination } from \"swiper\";\n\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport \"@ionic/vue/css/ionic-swiper.css\";\nimport IconoSVGBlanco from \"../components/IconoSVGBlanco.vue\";\nimport firebase from \"firebase/compat/app\";\n\nfunction uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport default defineComponent({\n  name: \"Tab1Page\",\n  components: {\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonPage,\n    IonButton,\n    IonButtons,\n    IonItem,\n    IonList,\n    IonCard,\n    IonCardHeader,\n    IonCardContent,\n    IonLabel,\n    IonAvatar,\n    IonFooter,\n    IonCol,\n    IonRow,\n    IonIcon,\n    IonText,\n    Swiper,\n    SwiperSlide,\n    IonImg,\n    iconoSVGBlanco,\n    IonSearchbar,\n    IonGrid,\n    IonModal,\n    IonInput,\n    IconoSVGBlanco,\n  },\n  data() {\n    return {\n      cargando: false,\n      isOpen: false,\n      darkMode: false,\n      comentarioIntroducido: \"\",\n      nombreRuta2: \"\",\n      comentariosMostrados: [],\n      nombreUsuario: auth.currentUser.displayName,\n    };\n  },\n  methods: {\n    setOpen(isOpen: boolean, nombreRuta: string) {\n      this.nombreRuta = nombreRuta;\n      this.rutas.forEach((ruta) => {\n        if (ruta.nombreRuta === nombreRuta) {\n          this.comentariosMostrados = ruta.comentarios;\n        }\n      });\n      this.isOpen = isOpen;\n\n      if (isOpen == false) {\n        this.comentariosMostrados = [];\n      }\n\n      console.log(this.nombreRuta);\n      console.log(this.comentariosMostrados);\n    },\n    async rutaRealizada(fotos: string[], tipoRuta: string) {\n      await db.collection(\"users\")\n        .doc(auth.currentUser.uid)\n        .collection(\"rutasUsuario\")\n        .doc(this.nombreRutaIntroducido)\n        .set({\n          estadoRuta: \"realizada\",\n          imagenesIntroducidas: fotos,\n        })\n        .then(this.$emit(\"anadir-ruta\"));\n\n      if (\n        tipoRuta == \"Circular\" ||\n        tipoRuta == \"Lineal\"\n      ) {\n        await db.collection(\"users\")\n          .doc(auth.currentUser?.uid)\n          .update({\n            rutasRealizadas: firebase.firestore.FieldValue.increment(1),\n            puntuacion: firebase.firestore.FieldValue.increment(3),\n          });\n      } else if (tipoRuta == \"Ascension\") {\n        await db.collection(\"users\")\n          .doc(auth.currentUser?.uid)\n          .update({\n            rutasRealizadas: firebase.firestore.FieldValue.increment(1),\n            puntuacion: firebase.firestore.FieldValue.increment(7),\n          });\n      }\n    },\n  },\n  setup() {\n    const state = reactive({\n      rutas: [],\n    });\n    const ionRouter = useIonRouter();\n    const slideOpts = {\n      initialSlide: 0,\n      speed: 400,\n    };\n    const goAddRoute = async () => {\n      ionRouter.push(\"/tabs/anadirRutaNueva\");\n    };\n    const irPerfilUsuario = async (email: string) => {\n      console.log(email);\n      ionRouter.push(\"/tabs/tabUserRuta/\" + email);\n    };\n    async function anadirComentario() {\n      db.collection(\"users\")\n        .doc(auth.currentUser?.uid)\n        .get()\n        .then((result) => {\n          const current = new Date();\n          const id = uuidv4();\n\n          const comentario = {\n            creador: auth.currentUser.displayName,\n            comentario: this.comentarioIntroducido,\n            fechaPublicacion: `${current.getDate()}/${\n              current.getMonth() + 1\n            }/${current.getFullYear()}`,\n            fotoPerfilUsuario: result.data().fotoPerfil,\n          };\n\n          this.comentariosMostrados.push(comentario);\n\n          db.collection(\"rutas\")\n            .doc(this.nombreRuta)\n            .collection(\"comentarios\")\n            .doc(id)\n            .set({\n              creador: auth.currentUser.displayName,\n              comentario: this.comentarioIntroducido,\n              fechaPublicacion: `${current.getDate()}/${\n                current.getMonth() + 1\n              }/${current.getFullYear()}`,\n              fotoPerfilUsuario: result.data().fotoPerfil,\n            });\n\n          console.log(\"Comentario introducido en la ruta: \" + this.nombreRuta);\n          this.comentarioIntroducido = \"\";\n        });\n    }\n\n    async function obtenerRutasDisponibles() {\n      this.cargando = true;\n      var fotoUsuario;\n      var puntosUsuario;\n      var nivelUsuario;\n      db.collection(\"rutas\")\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.forEach((doc) => {\n            var comentarios = [];\n            db.collection(\"users\")\n              .get()\n              .then((querySnapshot) => {\n                querySnapshot.forEach((docFoto) => {\n                  if (docFoto.data().email == doc.data().emailUsuario) {\n                    fotoUsuario = docFoto.data().fotoPerfil;\n                    puntosUsuario = docFoto.data().puntuacion;\n                  }\n                });\n\n                if (puntosUsuario <= 10) {\n                  nivelUsuario = \"Novat@\";\n                } else if (puntosUsuario > 10 && puntosUsuario <= 20) {\n                  nivelUsuario = \"Caminante\";\n                } else if (puntosUsuario > 20 && puntosUsuario <= 35) {\n                  nivelUsuario = \"Intrépid@\";\n                } else if (puntosUsuario > 35 && puntosUsuario <= 50) {\n                  nivelUsuario = \"Ruter@\";\n                } else if (puntosUsuario > 50 && puntosUsuario <= 70) {\n                  nivelUsuario = \"Expert@\";\n                } else if (puntosUsuario > 70) {\n                  nivelUsuario = \"Pro\";\n                }\n\n                if (doc.data().tipoRuta == \"rutaCircular\") {\n                  db.collection(\"rutas\")\n                    .doc(doc.data().nombreRuta)\n                    .collection(\"comentarios\")\n                    .get()\n                    .then((querySnapshot) => {\n                      querySnapshot.forEach((ruta) => {\n                        comentarios.push({\n                          comentario: ruta.data().comentario,\n                          creador: ruta.data().creador,\n                          fechaPublicacion: ruta.data().fechaPublicacion,\n                          fotoPerfilUsuario: ruta.data().fotoPerfilUsuario,\n                        });\n                      });\n                    });\n                  state.rutas.push({\n                    id: doc.id,\n                    nombreRuta: doc.data().nombreRuta,\n                    localizacion: doc.data().localizacion,\n                    imagenesIntroducidas: doc.data().imagenesIntroducidas,\n                    usuario: doc.data().usuarioIntroducido,\n                    nivelUsuario: nivelUsuario,\n                    tipoRuta: \"Circular\",\n                    valoracion: doc.data().valoracion,\n                    kilometros: doc.data().kilometros,\n                    fotoPerfilUsuarioIntroducida: fotoUsuario,\n                    iconoIntroducido: repeatOutline,\n                    fechaPublicacion: doc.data().fechaPublicacion,\n                    emailRuta: doc.data().emailUsuario,\n                    comentarios: comentarios,\n                  });\n                } else if (doc.data().tipoRuta == \"rutaLineal\") {\n                  db.collection(\"rutas\")\n                    .doc(doc.data().nombreRuta)\n                    .collection(\"comentarios\")\n                    .get()\n                    .then((querySnapshot) => {\n                      querySnapshot.forEach((ruta) => {\n                        comentarios.push({\n                          comentario: ruta.data().comentario,\n                          creador: ruta.data().creador,\n                          fechaPublicacion: ruta.data().fechaPublicacion,\n                          fotoPerfilUsuario: ruta.data().fotoPerfilUsuario,\n                        });\n                      });\n                    });\n                  state.rutas.push({\n                    id: doc.id,\n                    nombreRuta: doc.data().nombreRuta,\n                    localizacion: doc.data().localizacion,\n                    imagenesIntroducidas: doc.data().imagenesIntroducidas,\n                    usuario: doc.data().usuarioIntroducido,\n                    nivelUsuario: nivelUsuario,\n                    tipoRuta: \"Lineal\",\n                    valoracion: doc.data().valoracion,\n                    kilometros: doc.data().kilometros,\n                    fotoPerfilUsuarioIntroducida: fotoUsuario,\n                    iconoIntroducido: resizeOutline,\n                    fechaPublicacion: doc.data().fechaPublicacion,\n                    emailRuta: doc.data().emailUsuario,\n                    comentarios: comentarios,\n                  });\n                }\n                if (doc.data().tipoRuta == \"ascension\") {\n                  db.collection(\"rutas\")\n                    .doc(doc.data().nombreRuta)\n                    .collection(\"comentarios\")\n                    .get()\n                    .then((querySnapshot) => {\n                      querySnapshot.forEach((ruta) => {\n                        comentarios.push({\n                          comentario: ruta.data().comentario,\n                          creador: ruta.data().creador,\n                          fechaPublicacion: ruta.data().fechaPublicacion,\n                          fotoPerfilUsuario: ruta.data().fotoPerfilUsuario,\n                        });\n                      });\n                    });\n                  state.rutas.push({\n                    id: doc.id,\n                    nombreRuta: doc.data().nombreRuta,\n                    localizacion: doc.data().localizacion,\n                    imagenesIntroducidas: doc.data().imagenesIntroducidas,\n                    usuario: doc.data().usuarioIntroducido,\n                    nivelUsuario: nivelUsuario,\n                    tipoRuta: \"Ascension\",\n                    valoracion: doc.data().valoracion,\n                    kilometros: doc.data().kilometros,\n                    fotoPerfilUsuarioIntroducida: fotoUsuario,\n                    iconoIntroducido: flagOutline,\n                    fechaPublicacion: doc.data().fechaPublicacion,\n                    emailRuta: doc.data().emailUsuario,\n                    comentarios: comentarios,\n                  });\n                }\n\n                console.log(doc.id, \" => \", doc.data());\n              });\n          });\n        });\n\n      this.cargando = false;\n      console.log(\"Estas son las rutas: \");\n      console.log(state.rutas);\n    }\n\n    return {\n      obtenerRutasDisponibles,\n      anadirComentario,\n      goAddRoute,\n      irPerfilUsuario,\n      ...toRefs(state),\n      timeOutline,\n      starOutline,\n      resizeOutline,\n      repeatOutline,\n      flagOutline,\n      analyticsOutline,\n      addCircleOutline,\n      searchOutline,\n      locationOutline,\n      checkmarkDoneSharp,\n      chatbubbles,\n      arrowDownCircleOutline,\n      slideOpts,\n      modules: [Navigation, Pagination],\n    };\n  },\n  watch: {\n    $route(to, from) {\n      this.rutas = [];\n      this.obtenerRutasDisponibles();\n    },\n  },\n  mounted() {\n    this.obtenerRutasDisponibles();\n  },\n});\n</script>\n\n<style scoped>\nion-modal {\n  --border-radius: 16px;\n}\n\nion-modal ion-toolbar {\n  --background: rgb(14 116 144);\n  --color: white;\n}\n\n.cardContent {\n  padding-top: 0px;\n}\n.itemComentario {\n  align-items: center;\n}\n.item {\n  padding: 0% 0% 2% 0%;\n}\n\n.list {\n  padding: 3%;\n}\n.avatar {\n  margin-inline: 0px 12px;\n}\n.botonComentarios {\n  width: 80%;\n}\n.columnaComentarios {\n  display: flex;\n  justify-content: center;\n}\n.grid {\n  display: flex;\n  height: 100%;\n  align-items: center;\n}\n.col {\n  display: flex;\n  justify-content: center;\n}\n.row {\n  width: 100%;\n}\n.ruta {\n  width: 100%;\n}\n.swiper-pagination-bullet {\n  background: black;\n  opacity: 0.4;\n}\n\n.swiper-pagination-bullet-active {\n  background: white;\n}\n</style>\n","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/views/HacerAutenticacion.vue",["137"],[],"<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Iniciar sesión / Registrarse</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content :fullscreen=\"true\">\n      <ion-card>\n        <ion-card-header>\n          <ion-card-title> Bienvenido a trekkingCastillaYLeon </ion-card-title>\n          <ion-card-subtitle> Iniciar sesión / Registrarse </ion-card-subtitle>\n        </ion-card-header>\n        <ion-card-content>\n          <form\n            @submit.prevent=\"\n              modo === ModoDeAutenticacion.IniciarSesion\n                ? IniciarSesionConEmailYConstaseña(email, contrasena)\n                : RegistrarseConEmailYcontrasena(nombre, email, contrasena)\n            \"\n          >\n            <ion-item v-if=\"modo === ModoDeAutenticacion.Registrarse\">\n              <ion-label position=\"floating\">Nombre</ion-label>\n              <ion-input v-model=\"nombre\"></ion-input>\n            </ion-item>\n            <ion-item v-if=\"modo === ModoDeAutenticacion.Registrarse\">\n              <ion-label position=\"floating\">Apellidos</ion-label>\n              <ion-input v-model=\"apellidos\"></ion-input>\n            </ion-item>\n            <ion-item>\n              <ion-label position=\"floating\">Email</ion-label>\n              <ion-input v-model=\"email\"></ion-input>\n            </ion-item>\n            <ion-item>\n              <ion-label position=\"floating\">Contraseña</ion-label>\n              <ion-input v-model=\"contrasena\" type=\"password\"></ion-input>\n            </ion-item>\n            <ion-item v-if=\"modo === ModoDeAutenticacion.Registrarse\">\n              <ion-label position=\"floating\">Provincia: </ion-label>\n              <ion-select\n                interface=\"popover\"\n                placeholder=\"Selecciona tu provincia\"\n                required\n                v-model=\"provinciaUsuario\"\n              >\n                <ion-select-option value=\"León\"\n                  >León</ion-select-option\n                >\n                <ion-select-option value=\"Zamora\"\n                  >Zamora</ion-select-option\n                >\n                <ion-select-option value=\"Salamanca\"\n                  >Salamanca</ion-select-option\n                >\n                <ion-select-option value=\"Palencia\"\n                  >Palencia</ion-select-option\n                >\n                <ion-select-option value=\"Valladolid\"\n                  >Valladolid</ion-select-option\n                >\n                <ion-select-option value=\"Ávila\"\n                  >Ávila</ion-select-option\n                >\n                <ion-select-option value=\"Burgos\"\n                  >Burgos</ion-select-option\n                >\n                <ion-select-option value=\"Soria\"\n                  >Soria</ion-select-option\n                >\n                <ion-select-option value=\"Segovia\"\n                  >Segovia</ion-select-option\n                >\n              </ion-select>\n            </ion-item>\n            <ion-item v-if=\"modo === ModoDeAutenticacion.Registrarse\">\n              <ion-label position=\"floating\">Experiencia: </ion-label>\n              <ion-select\n                interface=\"popover\"\n                placeholder=\"¿Cuánta experiencia tienes?\"\n                required\n                v-model=\"experienciaUsuario\"\n              >\n                <ion-select-option value=\"novato\"\n                  >Acabo de empezar</ion-select-option\n                >\n                <ion-select-option value=\"normal\"\n                  >He hecho alguna ruta...</ion-select-option\n                >\n                <ion-select-option value=\"experto\"\n                  >Suelo rutear bastante</ion-select-option\n                >\n                <ion-select-option value=\"pro\"\n                  >Voy de marcha casi a diario</ion-select-option\n                >\n              </ion-select>\n            </ion-item>\n            <ion-button\n              expand=\"block\"\n              color=\"primary\"\n              class=\"ion-margin-top\"\n              type=\"submit\"\n            >\n              {{\n                modo === ModoDeAutenticacion.IniciarSesion\n                  ? \"Iniciar sesión\"\n                  : \"Registrarse\"\n              }}\n            </ion-button>\n            <ion-button\n              expand=\"block\"\n              color=\"secondary\"\n              class=\"ion-margin-top\"\n              @click=\"\n                modo =\n                  modo === ModoDeAutenticacion.IniciarSesion\n                    ? ModoDeAutenticacion.Registrarse\n                    : ModoDeAutenticacion.IniciarSesion\n              \"\n            >\n              {{\n                modo === ModoDeAutenticacion.IniciarSesion\n                  ? \"Registrarse\"\n                  : \"Cancelar\"\n              }}\n            </ion-button>\n          </form>\n        </ion-card-content>\n        <ion-card-content v-if=\"mensajeError\" class=\"mensaje-de-error\">\n          {{ mensajeError }}\n        </ion-card-content>\n      </ion-card>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonCardContent,\n  IonInput,\n  IonButton,\n  IonLabel,\n  IonItem,\n  IonSelect,\n  IonSelectOption,\n} from \"@ionic/vue\";\nimport { auth, db, storage } from \"../main\";\nimport { reactive, toRefs } from \"vue\";\nimport { useIonRouter } from \"@ionic/vue\";\nimport { defineComponent, ref } from \"vue\";\nimport { data } from \"dom7\";\n\nenum ModoDeAutenticacion {\n  IniciarSesion,\n  Registrarse,\n}\n\nexport var usernameApp = \"\";\n\nexport default defineComponent({\n  nombre: \"HacerAutenticacion\",\n  components: {\n    IonPage,\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonCard,\n    IonCardSubtitle,\n    IonCardTitle,\n    IonCardContent,\n    IonInput,\n    IonButton,\n    IonLabel,\n    IonItem,\n    IonCardHeader,\n    IonSelect,\n    IonSelectOption,\n  }, \n  setup() {\n    const isOpenRef = ref(false);\n    const setOpen = (state: boolean) => isOpenRef.value = state;\n    const ionRouter = useIonRouter();\n    const state = reactive({\n      nombre: \"\",\n      apellidos: \"\",\n      email: \"\",\n      contrasena: \"\",\n      provinciaUsuario: \"\",\n      experienciaUsuario: \"\",\n      modo: ModoDeAutenticacion.IniciarSesion,\n      mensajeError: \"\",\n      infoUsuario: \"Nuev@ aventurer@ con muchas ganas de patear!\",\n      contadorInicial: 0,\n    });\n    const IniciarSesionConEmailYConstaseña = async (\n      email: string,\n      contrasena: string\n    ) => {\n      try {\n        if (!email || !contrasena) {\n          state.mensajeError = \"Email y constraseña requeridos!\";\n          return;\n        }\n        await auth.signInWithEmailAndPassword(email, contrasena);\n        ionRouter.push(\"/tabs/tab1\");\n      } catch (error: unknown) {\n        if (error instanceof Error) {\n          state.mensajeError = error.message;\n        }\n      }\n    };\n    const RegistrarseConEmailYcontrasena = async (\n      nombre: string,\n      email: string,\n      contrasena: string\n    ) => {\n      try {\n        if (!nombre || !email || !contrasena) {\n          state.mensajeError =\n            \"Nombre, email y constraseña requeridos para registrarte!\";\n          return;\n        }\n        const authRes = await auth.createUserWithEmailAndPassword(\n          email,\n          contrasena\n        );\n        const storageRef = storage.ref();\n        var fotoUsuario: string;\n        if(state.experienciaUsuario == \"novato\"){\n          fotoUsuario = await storageRef.child(\"FotosCreacionPerfil/novato.jpeg\").getDownloadURL();\n        }else if(state.experienciaUsuario == \"normal\"){\n          fotoUsuario = await storageRef.child(\"FotosCreacionPerfil/normal.jpeg\").getDownloadURL();\n        }else if(state.experienciaUsuario == \"experto\"){\n          fotoUsuario = await storageRef.child(\"FotosCreacionPerfil/experto.jpeg\").getDownloadURL();\n        }else if(state.experienciaUsuario == \"pro\"){\n          fotoUsuario = await storageRef.child(\"FotosCreacionPerfil/pro.jpeg\").getDownloadURL();\n        }\n        const usernameApp = email.split(\"@\")[0];\n        const current = new Date();\n        db.collection(\"users\").doc(authRes.user?.uid).set({\n          nombreUsuario: usernameApp,\n          nombre,\n          apellidos: state.apellidos,\n          email,\n          provincia: state.provinciaUsuario,\n          fechaAlta: `${current.getDate()}/${\n            current.getMonth() + 1\n          }/${current.getFullYear()}`,\n          puntuacion: state.contadorInicial,\n          rutasRealizadas: state.contadorInicial,\n          rutasAnadidas: state.contadorInicial,\n          rutasModificadas: state.contadorInicial,\n          fotoPerfil: fotoUsuario,\n          infoUsuario: state.infoUsuario,\n        });\n        const user = auth.currentUser;\n        user.updateProfile({\n          displayName: nombre\n        });\n        ionRouter.push(\"/tabs/tab1\");\n      } catch (error: unknown) {\n        if (error instanceof Error) {\n          state.mensajeError = error.message;\n        }\n      }\n    };\n    return {\n      isOpenRef,\n      setOpen,\n      ...toRefs(state),\n      IniciarSesionConEmailYConstaseña,\n      RegistrarseConEmailYcontrasena,\n      ModoDeAutenticacion,\n    };\n  },\n});\n</script>","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/components/FormularioRuta.vue",["138","139","140","141","142","143"],[],"<template>\n  <ion-page>\n    <ion-header> </ion-header>\n    <ion-content :fullscreen=\"true\">\n      <form class=\"ios-padding\" @submit.prevent=\"guardarRuta\">\n        <ion-list>\n          <ion-item>\n            <ion-label position=\"floating\"\n              >Nombre de la ruta que vas a añadir</ion-label\n            >\n            <ion-input\n              ref=\"nombreRuta\"\n              clear-input\n              value=\"\"\n              type=\"text\"\n              required\n              v-model=\"nombreRutaIntroducido\"\n            ></ion-input>\n          </ion-item>\n          <ion-item>\n            <ion-label position=\"floating\"\n              >¿Dónde has realizado la ruta?</ion-label\n            >\n            <ion-input\n              clear-input\n              value=\"\"\n              type=\"text\"\n              required\n              v-model=\"localizacionRuta\"\n            ></ion-input>\n          </ion-item>\n          <ion-item class=\"itemFotos\">\n            <ion-grid>\n              <ion-col>\n                <ion-row>\n                  <ion-label class=\"itemFilaFotos\"\n                    >Añade fotos de la ruta</ion-label\n                  >\n                </ion-row>\n                <ion-row>\n                  <ion-item class=\"itemFilaFotos\">\n                    <ion-fab horizontal=\"center\">\n                      <ion-fab-button\n                        size=\"small\"\n                        color=\"dark\"\n                        @click=\"takePicture\"\n                      >\n                        <ion-icon :icon=\"addOutline\" />\n                      </ion-fab-button>\n                    </ion-fab>\n                  </ion-item>\n                </ion-row>\n                <ion-row>\n                  <ion-grid>\n                    <ion-row size=\"2\">\n                      <ion-col\n                        size=\"2\"\n                        v-for=\"imagen in urlsFotos\"\n                        v-bind:key=\"imagen\"\n                      >\n                        <ion-img :src=\"imagen\" />\n                      </ion-col>\n                    </ion-row>\n                  </ion-grid>\n                </ion-row>\n              </ion-col>\n            </ion-grid>\n          </ion-item>\n          <ion-item>\n            <ion-label position=\"floating\">Categoría</ion-label>\n            <ion-select\n              interface=\"popover\"\n              placeholder=\"Selecciona la categoría de la ruta\"\n              required\n              v-model=\"tipoRutaIntroducido\"\n              @ionChange=\"obtenerNivelUsuario()\"\n            >\n              <ion-select-option value=\"rutaLineal\"\n                >Ruta líneal\n              </ion-select-option>\n              <ion-select-option value=\"rutaCircular\"\n                >Ruta Circular\n              </ion-select-option>\n              <ion-select-option value=\"ascension\"\n                >Ascensión\n              </ion-select-option>\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-label position=\"floating\">Dificultad</ion-label>\n            <ion-select\n              interface=\"popover\"\n              placeholder=\"Selecciona la dificultad de la ruta\"\n            >\n              <ion-select-option value=\"facil\">Fácil</ion-select-option>\n              <ion-select-option value=\"media\">Media</ion-select-option>\n              <ion-select-option value=\"dificil\">Difícil</ion-select-option>\n              <ion-select-option value=\"extrema\">Extrema</ion-select-option>\n            </ion-select>\n          </ion-item>\n          <ion-item>\n            <ion-label position=\"floating\"\n              >Introduce cuántos kilómetros has recorrido</ion-label\n            >\n            <ion-input\n              clear-input\n              value=\"\"\n              type=\"text\"\n              v-model=\"kilometrosIntroducidos\"\n            ></ion-input>\n          </ion-item>\n          <ion-item>\n            <ion-label position=\"floating\">Valoración</ion-label>\n            <ion-select\n              interface=\"popover\"\n              placeholder=\"Añade una valoración para esta ruta\"\n              required\n              v-model=\"valoracionIntroducido\"\n            >\n              <ion-select-option value=\"1\">1 estrella</ion-select-option>\n              <ion-select-option value=\"2\">2 estrellas</ion-select-option>\n              <ion-select-option value=\"3\">3 estrellas</ion-select-option>\n              <ion-select-option value=\"4\">4 estrellas</ion-select-option>\n              <ion-select-option value=\"5\">5 estrellas</ion-select-option>\n            </ion-select>\n          </ion-item>\n        </ion-list>\n        <ion-list>\n          <ion-list-header>\n            <ion-label class=\"progreso\"\n              >Progreso al siguiente nivel: {{ progreso * 100 }}%</ion-label\n            >\n          </ion-list-header>\n          <ion-progress-bar :value=\"progreso\"></ion-progress-bar>\n        </ion-list>\n        <ion-button expand=\"block\" fill=\"outline\" color=\"dark\" type=\"submit\">\n          Añadir ruta\n        </ion-button>\n      </form>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport { Camera, CameraResultType } from \"@capacitor/camera\";\nimport { defineComponent, reactive } from \"vue\";\nimport { usernameApp } from \"@/views/HacerAutenticacion.vue\";\nimport {\n  IonContent,\n  IonHeader,\n  IonItem,\n  IonSelect,\n  IonSelectOption,\n  IonLabel,\n  IonList,\n  IonInput,\n  IonButton,\n  IonIcon,\n  IonFab,\n  IonFabButton,\n  IonCol,\n  IonRow,\n  IonGrid,\n  IonPage,\n  IonProgressBar,\n  modalController,\n  IonListHeader,\n  IonImg,\n} from \"@ionic/vue\";\n\nimport {\n  addOutline,\n  resizeOutline,\n  repeatOutline,\n  flagOutline,\n} from \"ionicons/icons\";\nimport { usePhotoGallery, UserPhoto } from \"../camera/usePhotoGallery\";\nimport { storage, auth, db } from \"../main\";\nimport firebase from \"firebase/compat/app\";\nimport { Cropper } from \"vue-advanced-cropper\";\nimport \"vue-advanced-cropper/dist/style.css\";\nimport Modal from \"./Modal.vue\";\n\nfunction uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport default defineComponent({\n  name: \"AnadirRuta\",\n  emits: [\"anadir-ruta\"],\n  components: {\n    IonContent,\n    IonHeader,\n    IonItem,\n    IonSelect,\n    IonSelectOption,\n    IonLabel,\n    IonList,\n    IonInput,\n    IonButton,\n    IonIcon,\n    IonFab,\n    IonFabButton,\n    IonCol,\n    IonRow,\n    IonGrid,\n    IonPage,\n    IonProgressBar,\n    IonListHeader,\n    IonImg,\n  },\n  data() {\n    return {\n      progreso: 0,\n      nombreRutaIntroducido: \"\",\n      localizacionRuta: \"\",\n      imagenesIntroducidas: \"\",\n      usuarioIntroducido: \"\",\n      tipoRutaIntroducido: \"\",\n      valoracionIntroducido: \"\",\n      kilometrosIntroducidos: \"\",\n    };\n  },\n  setup() {\n    const state = reactive({\n      puntosUser: 0,\n    });\n    var images = [];\n    const urlsFotos: Array<string> = reactive([]);\n    var url = \"\";\n    const user = auth.currentUser;\n    const openModal = async (imagenURL) => {\n      const modal = await modalController.create({\n        component: Modal,\n        componentProps: {\n          image: imagenURL,\n        },\n      });\n      modal.present();\n\n      const { data, role } = await modal.onWillDismiss();\n\n      if (role === \"confirm\") {\n        urlsFotos.push(`${data}`);\n        console.log(`${data}`);\n      }\n    };\n    const takePicture = async () => {\n      const image = await Camera.getPhoto({\n        quality: 90,\n        allowEditing: false,\n        resultType: CameraResultType.Base64,\n      });\n      if (image?.base64String) {\n        const guid = uuidv4();\n        const filepath = `${user?.uid}/images/${guid}.${image.format}`;\n        const storageRef = storage.ref();\n        await storageRef\n          .child(filepath)\n          .putString(image.base64String, \"base64\")\n          .then((snapshot) => {\n            storageRef\n              .child(filepath)\n              .getDownloadURL()\n              .then((url) => {\n                console.log(image);\n                images.push(image);\n                openModal(url);\n              });\n          });\n      }\n    };\n    async function obtenerNivelUsuario() {\n      db.collection(\"users\")\n        .doc(auth.currentUser?.uid)\n        .get()\n        .then((result) => {\n          state.puntosUser = result.data().puntuacion;\n          if (result.data().puntuacion <= 10) {\n            if (this.tipoRutaIntroducido == \"\") {\n              this.progreso = state.puntosUser / 10;\n            } else if (\n              this.tipoRutaIntroducido == \"rutaLineal\" ||\n              this.tipoRutaIntroducido == \"rutaCircular\"\n            ) {\n              this.progreso = (state.puntosUser + 5) / 10;\n            } else if (this.tipoRutaIntroducido == \"ascension\") {\n              this.progreso = (state.puntosUser + 15) / 10;\n            }\n          } else if (\n            result.data().puntuacion > 10 &&\n            result.data().puntuacion <= 20\n          ) {\n            if (this.tipoRutaIntroducido == \"\") {\n              this.progreso = (state.puntosUser - 10) / 10;\n            } else if (\n              this.tipoRutaIntroducido == \"rutaLineal\" ||\n              this.tipoRutaIntroducido == \"rutaCircular\"\n            ) {\n              this.progreso = (state.puntosUser - 10 + 5) / 10;\n            } else if (this.tipoRutaIntroducido == \"ascension\") {\n              this.progreso = (state.puntosUser - 10 + 15) / 10;\n            }\n          } else if (\n            result.data().puntuacion > 20 &&\n            result.data().puntuacion <= 35\n          ) {\n            if (this.tipoRutaIntroducido == \"\") {\n              this.progreso = (state.puntosUser - 20) / 15;\n            } else if (\n              this.tipoRutaIntroducido == \"rutaLineal\" ||\n              this.tipoRutaIntroducido == \"rutaCircular\"\n            ) {\n              this.progreso = (state.puntosUser - 20 + 5) / 10;\n            } else if (this.tipoRutaIntroducido == \"ascension\") {\n              this.progreso = (state.puntosUser - 20 + 15) / 10;\n            }\n          } else if (\n            result.data().puntuacion > 35 &&\n            result.data().puntuacion <= 50\n          ) {\n            if (this.tipoRutaIntroducido == \"\") {\n              this.progreso = (state.puntosUser - 35) / 15;\n            } else if (\n              this.tipoRutaIntroducido == \"rutaLineal\" ||\n              this.tipoRutaIntroducido == \"rutaCircular\"\n            ) {\n              this.progreso = (state.puntosUser - 35 + 5) / 10;\n            } else if (this.tipoRutaIntroducido == \"ascension\") {\n              this.progreso = (state.puntosUser - 35 + 15) / 10;\n            }\n          } else if (\n            result.data().puntuacion > 50 &&\n            result.data().puntuacion <= 70\n          ) {\n            if (this.tipoRutaIntroducido == \"\") {\n              this.progreso = (state.puntosUser - 50) / 20;\n            } else if (\n              this.tipoRutaIntroducido == \"rutaLineal\" ||\n              this.tipoRutaIntroducido == \"rutaCircular\"\n            ) {\n              this.progreso = (state.puntosUser - 50 + 5) / 10;\n            } else if (this.tipoRutaIntroducido == \"ascension\") {\n              this.progreso = (state.puntosUser - 50 + 15) / 10;\n            }\n          } else if (result.data().puntuacion > 70) {\n            this.progreso = 1;\n          }\n        });\n    }\n    async function guardarRuta() {\n      const current = new Date();\n      db.collection(\"rutas\")\n        .doc(this.nombreRutaIntroducido)\n        .set({\n          nombreRuta: this.nombreRutaIntroducido,\n          localizacion: this.localizacionRuta,\n          imagenesIntroducidas: urlsFotos,\n          usuarioIntroducido: auth.currentUser.displayName,\n          tipoRuta: this.tipoRutaIntroducido,\n          valoracion: this.valoracionIntroducido,\n          kilometros: this.kilometrosIntroducidos,\n          emailUsuario: auth.currentUser.email,\n          fechaPublicacion: `${current.getDate()}/${\n            current.getMonth() + 1\n          }/${current.getFullYear()}`,\n        });\n\n      if (\n        this.tipoRutaIntroducido == \"rutaCircular\" ||\n        this.tipoRutaIntroducido == \"rutaLineal\"\n      ) {\n        db.collection(\"users\")\n          .doc(auth.currentUser.uid)\n          .update({\n            rutasAnadidas: firebase.firestore.FieldValue.increment(1),\n            puntuacion: firebase.firestore.FieldValue.increment(5),\n          });\n      } else if (this.tipoRutaIntroducido == \"ascension\") {\n        db.collection(\"users\")\n          .doc(auth.currentUser.uid)\n          .update({\n            rutasAnadidas: firebase.firestore.FieldValue.increment(1),\n            puntuacion: firebase.firestore.FieldValue.increment(15),\n          });\n      }\n\n      db.collection(\"users\")\n        .doc(auth.currentUser.uid)\n        .collection(\"rutasUsuario\")\n        .doc(this.nombreRutaIntroducido)\n        .set({\n          estadoRuta: \"anadida\",\n          imagenesIntroducidas: urlsFotos,\n        })\n        .then(this.$emit(\"anadir-ruta\"));\n    }\n\n    const { photos, takePhoto } = usePhotoGallery();\n    return {\n      urlsFotos,\n      usernameApp,\n      resizeOutline,\n      addOutline,\n      repeatOutline,\n      flagOutline,\n      takePhoto,\n      photos,\n      takePicture,\n      guardarRuta,\n      obtenerNivelUsuario,\n    };\n  },\n  mounted() {\n    this.obtenerNivelUsuario();\n  },\n});\n</script>\n\n<style scoped>\n.progreso {\n  margin-top: 0px;\n}\n.itemFotos {\n  display: flex;\n}\n.itemFilaFotos {\n  width: 100%;\n  text-align: center;\n  padding: 0% 0% 4% 0%;\n}\n.ios-padding {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n</style>","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/components/IconoSVGBlanco.vue",[],[],"/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/components/Modal.vue",["144"],[],"<template>\n  <ion-header>\n    <ion-toolbar>\n      <ion-title>Recorta tu foto:</ion-title>\n    </ion-toolbar>\n  </ion-header>\n  <ion-content class=\"ion-padding\">\n    <ion-item>\n      <cropper\n        :stencil-props=\"{\n          aspectRatio: 1 / 1,\n        }\"\n        :src=\"image\"\n        ref=\"cropper\"\n      />\n    </ion-item>\n    <ion-button expand=\"block\" color=\"medium\" @click=\"recortar()\">\n      Recortar\n    </ion-button>\n    <ion-row class=\"fila\">\n      <ion-label class=\"resultado\" v-if=\"value !== null\"\n        >Este es el resultado:</ion-label\n      >\n    </ion-row>\n    <ion-img v-if=\"value !== null\" :src=\"value\"> </ion-img>\n    <ion-button v-if=\"value !== null\" expand=\"block\" color=\"dark\" @click=\"confirm\"\n      >Confirmar</ion-button\n    >\n  </ion-content>\n</template>\n\n<script lang=\"ts\">\nimport {\n  IonContent,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonButton,\n  IonItem,\n  IonImg,\n  IonLabel,\n  modalController,\n  IonRow,\n} from \"@ionic/vue\";\nimport { defineComponent, reactive, toRefs } from \"vue\";\nimport { Cropper } from \"vue-advanced-cropper\";\nimport \"vue-advanced-cropper/dist/style.css\";\n\nexport default defineComponent({\n  name: \"ModalComponent\",\n  components: {\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonItem,\n    Cropper,\n    IonImg,\n    IonLabel,\n    IonRow,\n  },\n  props: {\n    image: String,\n  },\n  setup() {\n    const imageCropped = reactive({\n      value: null,\n    });\n    async function recortar() {\n      const { coordinates, canvas } = this.$refs.cropper.getResult();\n      imageCropped.value = canvas.toDataURL();\n    }\n    return {\n      ...toRefs(imageCropped),\n      recortar,\n    };\n  },\n  methods: {\n      confirm() {\n        return modalController.dismiss(this.value, 'confirm');\n      },\n    },\n});\n</script>\n\n<style scoped>\n.fila{\n    padding: 8% 0% 0% 0%;\n}\n.resultado {\n  text-align: center;\n  font-size: x-large;\n  width: 100%\n}\n</style>","/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/components/NavBar.vue",[],[],"/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/components/TrekkingMap.vue",[],[],"/Users/diegosanchezmartin/Desktop/trekkingCastillaYLeon/trekkingCastillaYLeon/src/camera/usePhotoGallery.ts",["145","146","147"],[],"import { Storage } from \"@capacitor/storage\";\nimport { ref, onMounted, watch } from \"vue\";\nimport {\n  Camera,\n  CameraResultType,\n  CameraSource,\n  Photo,\n} from \"@capacitor/camera\";\nimport { Filesystem, Directory } from \"@capacitor/filesystem\";\nimport { isPlatform } from \"@ionic/vue\";\nimport { Capacitor } from \"@capacitor/core\";\n\nexport function usePhotoGallery() {\n\n  const PHOTO_STORAGE = 'photos';\n  const photos = ref<UserPhoto[]>([]);\n\n  const loadSaved = async () => {\n    const photoList = await Storage.get({ key: PHOTO_STORAGE });\n    const photosInStorage = [];\n\n    if (!isPlatform(\"hybrid\")) {\n      for (const photo of photosInStorage) {\n        const file = await Filesystem.readFile({\n          path: photo.filepath,\n          directory: Directory.Data,\n        });\n        photo.webviewPath = `data:image/jpeg;base64,${file.data}`;\n      }\n    }\n\n    photos.value = photosInStorage;\n  };\n\n  const convertBlobToBase64 = (blob: Blob) =>\n    new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onerror = reject;\n      reader.onload = () => {\n        resolve(reader.result);\n      };\n      reader.readAsDataURL(blob);\n    });\n\n  const savePicture = async (\n    photo: Photo,\n    fileName: string\n  ): Promise<UserPhoto> => {\n    let base64Data: string;\n\n    if (isPlatform(\"hybrid\")) {\n      const file = await Filesystem.readFile({\n        path: photo.path!,\n      });\n      base64Data = file.data;\n    } else {\n      const response = await fetch(photo.webPath!);\n      const blob = await response.blob();\n      base64Data = (await convertBlobToBase64(blob)) as string;\n    }\n\n    const savedFile = await Filesystem.writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: Directory.Data,\n    });\n\n    if (isPlatform(\"hybrid\")) {\n      return {\n        filepath: savedFile.uri,\n        webviewPath: Capacitor.convertFileSrc(savedFile.uri),\n      };\n    } else {\n      return {\n        filepath: fileName,\n        webviewPath: photo.webPath,\n      };\n    }\n  };\n\n  const takePhoto = async () => {\n    const photo = await Camera.getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100,\n    });\n    const fileName = new Date().getTime() + \".jpeg\";\n    const savedFileImage = await savePicture(photo, fileName);\n\n    photos.value = [savedFileImage, ...photos.value];\n  };\n\n  const cachePhotos = () => {\n    Storage.set({\n      key: PHOTO_STORAGE,\n      value: JSON.stringify(photos.value),\n    });\n  };\n\n  onMounted(loadSaved);\n\n  watch(photos, cachePhotos);  \n\n  return {\n    photos,\n    takePhoto,\n  };\n}\n\nexport interface UserPhoto {\n  filepath: string;\n  webviewPath?: string;\n}\n",{"ruleId":"148","severity":1,"message":"149","line":60,"column":32,"nodeType":"150","messageId":"151","endLine":60,"endColumn":36},{"ruleId":"148","severity":1,"message":"152","line":237,"column":10,"nodeType":"150","messageId":"151","endLine":237,"endColumn":13},{"ruleId":"148","severity":1,"message":"153","line":237,"column":15,"nodeType":"150","messageId":"151","endLine":237,"endColumn":21},{"ruleId":"148","severity":1,"message":"154","line":412,"column":12,"nodeType":"150","messageId":"151","endLine":412,"endColumn":14},{"ruleId":"148","severity":1,"message":"155","line":412,"column":16,"nodeType":"150","messageId":"151","endLine":412,"endColumn":20},{"ruleId":"148","severity":1,"message":"156","line":76,"column":10,"nodeType":"150","messageId":"151","endLine":76,"endColumn":16},{"ruleId":"157","severity":1,"message":"158","line":168,"column":7,"nodeType":"159","messageId":"160","endLine":168,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":235,"column":7,"nodeType":"159","messageId":"160","endLine":235,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":243,"column":9,"nodeType":"159","messageId":"160","endLine":243,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":253,"column":13,"nodeType":"159","messageId":"160","endLine":253,"endColumn":24},{"ruleId":"157","severity":1,"message":"158","line":258,"column":15,"nodeType":"159","messageId":"160","endLine":258,"endColumn":26},{"ruleId":"148","severity":1,"message":"161","line":73,"column":11,"nodeType":"150","messageId":"151","endLine":73,"endColumn":16},{"ruleId":"157","severity":1,"message":"158","line":362,"column":9,"nodeType":"159","messageId":"160","endLine":362,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":363,"column":9,"nodeType":"159","messageId":"160","endLine":363,"endColumn":20},{"ruleId":"148","severity":1,"message":"154","line":454,"column":12,"nodeType":"150","messageId":"151","endLine":454,"endColumn":14},{"ruleId":"148","severity":1,"message":"155","line":454,"column":16,"nodeType":"150","messageId":"151","endLine":454,"endColumn":20},{"ruleId":"148","severity":1,"message":"162","line":76,"column":27,"nodeType":"150","messageId":"151","endLine":76,"endColumn":35},{"ruleId":"148","severity":1,"message":"163","line":76,"column":37,"nodeType":"150","messageId":"151","endLine":76,"endColumn":43},{"ruleId":"148","severity":1,"message":"164","line":125,"column":20,"nodeType":"150","messageId":"151","endLine":125,"endColumn":35},{"ruleId":"148","severity":1,"message":"165","line":223,"column":16,"nodeType":"150","messageId":"151","endLine":223,"endColumn":22},{"ruleId":"148","severity":1,"message":"154","line":286,"column":12,"nodeType":"150","messageId":"151","endLine":286,"endColumn":14},{"ruleId":"148","severity":1,"message":"155","line":286,"column":16,"nodeType":"150","messageId":"151","endLine":286,"endColumn":20},{"ruleId":"148","severity":1,"message":"166","line":179,"column":10,"nodeType":"150","messageId":"151","endLine":179,"endColumn":20},{"ruleId":"148","severity":1,"message":"167","line":179,"column":22,"nodeType":"150","messageId":"151","endLine":179,"endColumn":29},{"ruleId":"148","severity":1,"message":"168","line":222,"column":8,"nodeType":"150","messageId":"151","endLine":222,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":298,"column":7,"nodeType":"159","messageId":"160","endLine":298,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":299,"column":7,"nodeType":"159","messageId":"160","endLine":299,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":345,"column":7,"nodeType":"159","messageId":"160","endLine":345,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":380,"column":11,"nodeType":"159","messageId":"160","endLine":380,"endColumn":22},{"ruleId":"157","severity":1,"message":"158","line":515,"column":17,"nodeType":"159","messageId":"160","endLine":515,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":521,"column":7,"nodeType":"159","messageId":"160","endLine":521,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":522,"column":7,"nodeType":"159","messageId":"160","endLine":522,"endColumn":18},{"ruleId":"148","severity":1,"message":"154","line":548,"column":12,"nodeType":"150","messageId":"151","endLine":548,"endColumn":14},{"ruleId":"148","severity":1,"message":"155","line":548,"column":16,"nodeType":"150","messageId":"151","endLine":548,"endColumn":20},{"ruleId":"148","severity":1,"message":"169","line":159,"column":10,"nodeType":"150","messageId":"151","endLine":159,"endColumn":14},{"ruleId":"148","severity":1,"message":"170","line":177,"column":27,"nodeType":"150","messageId":"151","endLine":177,"endColumn":36},{"ruleId":"148","severity":1,"message":"171","line":180,"column":10,"nodeType":"150","messageId":"151","endLine":180,"endColumn":17},{"ruleId":"148","severity":1,"message":"172","line":234,"column":9,"nodeType":"150","messageId":"151","endLine":234,"endColumn":12},{"ruleId":"157","severity":1,"message":"158","line":249,"column":9,"nodeType":"159","messageId":"160","endLine":249,"endColumn":20},{"ruleId":"148","severity":1,"message":"173","line":265,"column":18,"nodeType":"150","messageId":"151","endLine":265,"endColumn":26},{"ruleId":"157","severity":1,"message":"158","line":270,"column":17,"nodeType":"159","messageId":"160","endLine":270,"endColumn":28},{"ruleId":"148","severity":1,"message":"174","line":71,"column":15,"nodeType":"150","messageId":"151","endLine":71,"endColumn":26},{"ruleId":"148","severity":1,"message":"175","line":19,"column":11,"nodeType":"150","messageId":"151","endLine":19,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":53,"column":15,"nodeType":"178","messageId":"179","endLine":53,"endColumn":26},{"ruleId":"176","severity":1,"message":"177","line":57,"column":36,"nodeType":"178","messageId":"179","endLine":57,"endColumn":50},"@typescript-eslint/no-unused-vars","'user' is defined but never used.","Identifier","unusedVar","'doc' is defined but never used.","'getDoc' is defined but never used.","'to' is defined but never used.","'from' is defined but never used.","'uuidv4' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'state' is assigned a value but never used.","'reactive' is defined but never used.","'toRefs' is defined but never used.","'ev' is defined but never used.","'result' is defined but never used.","'collection' is defined but never used.","'getDocs' is defined but never used.","'iconoSVGNegro' is defined but never used.","'data' is defined but never used.","'UserPhoto' is defined but never used.","'Cropper' is defined but never used.","'url' is assigned a value but never used.","'snapshot' is defined but never used.","'coordinates' is assigned a value but never used.","'photoList' is assigned a value but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull"]