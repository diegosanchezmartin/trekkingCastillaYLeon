import { ParserResult, PropsResult, SlotResult, EventResult, MethodResult } from '../parser';
interface RenderOptions {
    props: string[];
    slots: string[];
    events: string[];
    methods: string[];
}
export interface RenderResult {
    props?: string;
    slots?: string;
    events?: string;
    methods?: string;
}
export default class Render {
    res: ParserResult;
    options?: RenderOptions | undefined;
    constructor(res: ParserResult, options?: RenderOptions | undefined);
    render(): RenderResult;
    propRender(propsRes: PropsResult[]): string;
    slotRender(slotsRes: SlotResult[]): string;
    eventRender(propsRes: EventResult[]): string;
    methodRender(slotsRes: MethodResult[]): string;
    renderTabelHeader(header: string[]): string;
    renderTabelRow(row: string[]): string;
    renderSplitLine(num: number): string;
}
export {};
