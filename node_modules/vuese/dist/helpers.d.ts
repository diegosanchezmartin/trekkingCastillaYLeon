import { NodePath } from '@babel/traverse';
import * as bt from '@babel/types';
/**
 * If a node satisfies the following conditions, then we will use this node as a Vue component.
 * 1. It is a default export
 * 2. others...
 */
export declare function isVueComponent(node: bt.Node): boolean;
export declare function isCommentLine(node: {
    type: string;
}): boolean;
export declare function isCommentBlock(node: {
    type: string;
}): boolean;
export declare function runFunction(fnCode: bt.Node): any;
export declare function getValueFromGenerate(node: any): any;
export declare function isVueOption(path: NodePath<bt.ObjectProperty | bt.ObjectMethod>, optionsName: string): boolean;
export declare function getEmitDecorator(decorators: bt.Decorator[] | null): bt.Decorator | null;
declare type PropDecoratorArgument = bt.Identifier | bt.ArrayExpression | bt.ObjectExpression | null;
export declare function getArgumentFromPropDecorator(classPropertyNode: bt.ClassProperty): PropDecoratorArgument;
export declare function writeFileSync(str: any, keep?: boolean): void;
export {};
