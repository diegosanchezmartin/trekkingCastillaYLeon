"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

var _vm = _interopRequireDefault(require("vm"));

var _path = _interopRequireDefault(require("path"));

var styleguideLoader = _interopRequireWildcard(require("./styleguide-loader"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

vi.mock('react-styleguidist/lib/loaders/utils/getComponentFilesFromSections', function () {
  return {
    "default": function _default() {
      return ['foo', 'bar'];
    }
  };
});
vi.mock('./utils/getSections', function () {
  return {
    "default": function _default() {
      return [];
    }
  };
});
describe('styleguide-loader', function () {
  var file = _path["default"].resolve(__dirname, '../../../../test/components/Button.vue');

  var configDir = _path["default"].resolve(__dirname, '../../../../test');

  it('should return valid, parsable JS', function () {
    var callback = function callback(err, result) {
      expect(result).toBeTruthy();
      expect(function () {
        return new _vm["default"].Script(result);
      }).not.toThrow();
    };

    styleguideLoader.pitch.call({
      async: function async() {
        return callback;
      },
      request: file,
      _styleguidist: {
        sections: [{
          components: 'components/**/*.js'
        }],
        configDir: configDir,
        getExampleFilename: function getExampleFilename() {
          return 'Readme.md';
        },
        getComponentPathLine: function getComponentPathLine(filepath) {
          return filepath;
        },
        theme: 'path/to/themeFile.js'
      },
      addDependency: function addDependency() {},
      addContextDependency: function addContextDependency() {}
    });
  });
  it('should add context dependencies to webpack from contextDependencies config option', function () {
    var callback = function callback() {
      expect(addContextDependency).toHaveBeenCalledTimes(2);
      expect(addContextDependency).toHaveBeenCalledWith(contextDependencies[0]);
      expect(addContextDependency).toHaveBeenCalledWith(contextDependencies[1]);
    };

    var contextDependencies = ['foo', 'bar'];
    var addContextDependency = vi.fn();
    styleguideLoader.pitch.call({
      async: function async() {
        return callback;
      },
      request: file,
      _styleguidist: {
        sections: [{
          components: 'components/**/*.js'
        }],
        configDir: configDir,
        getExampleFilename: function getExampleFilename() {
          return 'Readme.md';
        },
        getComponentPathLine: function getComponentPathLine(filepath) {
          return filepath;
        },
        contextDependencies: contextDependencies
      },
      addContextDependency: addContextDependency
    });
  });
});