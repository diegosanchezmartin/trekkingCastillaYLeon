import { TransformOptions } from 'buble';
import { EvaluableComponent } from 'vue-inbrowser-compiler-utils';
interface EvaluableComponentWithSource extends EvaluableComponent {
    raw: {
        script: string;
        template?: string;
    };
}
/**
 * Reads the code as a string, separates the javascript part from the template & style parts,
 * then replaces the imports with requires and returns the script code as the body of a function.
 *
 * - For Vue2 the function compiles the template into a render function and adds the new function to the evaluated code.
 * - For Vue3 you have to use the compileVue3Template function yourself to compile the template into a function.
 * @param code
 * @param config buble config to be used when transforming
 *
 */
export default function compileVueCodeForEvalFunction(code: string, config?: TransformOptions): EvaluableComponentWithSource;
export {};
